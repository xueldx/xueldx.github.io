import{_ as k,C as r,c as d,o as n,a8 as h,b as e,j as t,w as i,a,G as p,a9 as E}from"./chunks/framework.DW4T_yAZ.js";const b=JSON.parse('{"title":"大文件上传系统","description":"","frontmatter":{},"headers":[],"relativePath":"projects/LitePan/3-file-management-system/3.2-file-upload-system.md","filePath":"projects/LitePan/3-file-management-system/3.2-file-upload-system.md","lastUpdated":1749448992000}'),A={name:"projects/LitePan/3-file-management-system/3.2-file-upload-system.md"};function B(g,s,c,F,y,o){const l=r("Mermaid");return n(),d("div",null,[s[7]||(s[7]=h(`<h1 id="大文件上传系统" tabindex="-1">大文件上传系统 <a class="header-anchor" href="#大文件上传系统" aria-label="Permalink to &quot;大文件上传系统&quot;">​</a></h1><blockquote><p><strong>相关源文件</strong></p><ul><li><a href="https://github.com/xueldx/%E4%BC%98%E4%BA%AB%E4%BA%91%E7%9B%98-front/blob/3ffecfa5/src/utils/Verify.js" target="_blank" rel="noreferrer">src/utils/Verify.js</a></li><li><a href="https://github.com/xueldx/%E4%BC%98%E4%BA%AB%E4%BA%91%E7%9B%98-front/blob/3ffecfa5/src/views/main/Uploader.vue" target="_blank" rel="noreferrer">src/views/main/Uploader.vue</a></li></ul></blockquote><p>本节全面介绍了 优享云盘 中的文件上传系统，该系统具备先进的<code>分块上传</code>功能，并支持 <code>MD5</code> 验证、<code>进度跟踪</code>以及<code>断点续传</code>。系统通过文件分割高效处理大文件上传，并能为用户提供实时反馈。</p><h2 id="系统概述" tabindex="-1">系统概述 <a class="header-anchor" href="#系统概述" aria-label="Permalink to &quot;系统概述&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">文件上传系统围绕 <code>Uploader.vue</code> 组件构建，提供企业级的上传功能，包括：</p><ul><li><strong>分块上传</strong>：用于处理大文件（每块 5MB）</li><li><strong>MD5 计算</strong>：用于文件完整性验证</li><li><strong>进度跟踪</strong>：实时更新进度</li><li><strong>暂停/恢复</strong>：支持中断上传后继续</li><li><strong>秒传检测</strong>：检测重复文件实现秒传</li><li><strong>状态管理</strong>：可视化反馈上传状态</li></ul></div><h2 id="组件集成" tabindex="-1">组件集成 <a class="header-anchor" href="#组件集成" aria-label="Permalink to &quot;组件集成&quot;">​</a></h2><h3 id="文件上传组件封装与参数传递架构" tabindex="-1">文件上传组件封装与参数传递架构 <a class="header-anchor" href="#文件上传组件封装与参数传递架构" aria-label="Permalink to &quot;文件上传组件封装与参数传递架构&quot;">​</a></h3><p>系统采用组件化设计思想，通过父子组件间的参数传递机制实现了高效的文件上传功能。主要组件包括 Main.vue（文件选择入口）、Framework.vue（中间协调层）和 Uploader.vue（实际文件处理组件），形成了层次分明的文件上传处理流程。</p><h3 id="组件职责与交互流程" tabindex="-1">组件职责与交互流程 <a class="header-anchor" href="#组件职责与交互流程" aria-label="Permalink to &quot;组件职责与交互流程&quot;">​</a></h3><table tabindex="0"><thead><tr><th>组件名称</th><th>说明</th></tr></thead><tbody><tr><td>Main.vue</td><td>作为文件上传的入口组件，提供文件选择功能。<br>使用 <code>:http-request</code> 指令将 <code>addFile</code> 方法绑定到一个 HTTP 请求事件上。<br>定义并触发自定义事件 addFile，传递包含文件和父级文件夹 ID 的数据对象。</td></tr><tr><td>Framework.vue</td><td>监听来自 Main.vue 的 &quot;addFile&quot; 事件，并调用 <code>addFile</code> 方法进行处理。<br>在 <code>addFile</code> 方法中，设置 <code>showUploader.value</code> 为 <code>true</code> 以显示 Uploader 组件。<br>调用 <code>uploaderRef</code> 引用的 Uploader 组件的 <code>addFile</code> 方法。</td></tr><tr><td>Uploader.vue</td><td>定义了 <code>addFile</code> 方法，用于接收文件和文件父级 ID 进行具体的上传文件操作。<br>使用 <code>defineExpose</code> 函数将 <code>addFile</code> 方法暴露给其他组件以供调用。</td></tr></tbody></table><h3 id="数据流与方法调用流程" tabindex="-1">数据流与方法调用流程 <a class="header-anchor" href="#数据流与方法调用流程" aria-label="Permalink to &quot;数据流与方法调用流程&quot;">​</a></h3><p><strong>1.文件选择与事件触发</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Main.vue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> emit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineEmits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addFile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fileData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addFile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    file: fileData.file,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    filePid: currentFoloder.value.fileId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>2.中间层事件处理与组件调用</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Framework.vue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">component</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> :is=&quot;Component&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> @addFile=&quot;addFile&quot;&gt;&lt;/component&gt;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&lt;Uploader</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uploaderRef&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Uploader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filePid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  showUploader.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  uploaderRef.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file, filePid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>3.文件上传组件实现</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Uploader.vue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filePid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 文件处理逻辑：切片、MD5计算、上传等</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineExpose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ addFile })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="文件上传组件架构概述" tabindex="-1">文件上传组件架构概述 <a class="header-anchor" href="#文件上传组件架构概述" aria-label="Permalink to &quot;文件上传组件架构概述&quot;">​</a></h2>`,18)),(n(),e(E,null,{default:i(()=>[p(l,{id:"mermaid-128",class:"mermaid",graph:"flowchart%20TD%0A%0AUploaderVue%5B%22Uploader.vue%3Cbr%3E%E4%B8%BB%E4%B8%8A%E4%BC%A0%E6%8E%A7%E5%88%B6%E5%99%A8%22%5D%0AFileList%5B%22fileList%3Cbr%3E%E4%B8%8A%E4%BC%A0%E9%98%9F%E5%88%97%E7%AE%A1%E7%90%86%22%5D%0AStatusMgr%5B%22STATUS%3Cbr%3E%E7%8A%B6%E6%80%81%E5%AE%9A%E4%B9%89%22%5D%0AMD5Calc%5B%22computeMD5()%3Cbr%3E%E6%96%87%E4%BB%B6%E5%93%88%E5%B8%8C%E8%AE%A1%E7%AE%97%22%5D%0AChunkMgr%5B%22chunkSize%3Cbr%3E5MB%20%E5%88%86%E5%9D%97%E7%AE%A1%E7%90%86%22%5D%0ASparkMD5%5B%22SparkMD5%3Cbr%3E%E5%A2%9E%E9%87%8F%E5%93%88%E5%B8%8C%E5%BA%93%22%5D%0AUploadFunc%5B%22uploadFile()%3Cbr%3E%E5%88%86%E5%9D%97%E4%B8%8A%E4%BC%A0%E9%80%BB%E8%BE%91%22%5D%0APauseFunc%5B%22pauseUpload()%3Cbr%3E%E6%9A%82%E5%81%9C%E6%8E%A7%E5%88%B6%22%5D%0AStartFunc%5B%22startUpload()%3Cbr%3E%E6%81%A2%E5%A4%8D%E6%8E%A7%E5%88%B6%22%5D%0ADelFunc%5B%22delUpload()%3Cbr%3E%E5%8F%96%E6%B6%88%E6%8E%A7%E5%88%B6%22%5D%0AAPIEndpoint%5B%22%2Ffile%2FuploadFile%3Cbr%3E%E4%B8%8A%E4%BC%A0%20API%22%5D%0ARequestJS%5B%22Request.js%3Cbr%3EHTTP%20%E5%AE%A2%E6%88%B7%E7%AB%AF%22%5D%0AProgressCallback%5B%22uploadProgressCallback%3Cbr%3E%E8%BF%9B%E5%BA%A6%E6%9B%B4%E6%96%B0%22%5D%0A%0A%20%20%20%20UploaderVue%20--%3E%20MD5Calc%0A%20%20%20%20UploaderVue%20--%3E%20UploadFunc%0A%20%20%20%20UploaderVue%20--%3E%20PauseFunc%0A%20%20%20%20UploaderVue%20--%3E%20StartFunc%0A%20%20%20%20UploaderVue%20--%3E%20DelFunc%0A%20%20%20%20UploadFunc%20--%3E%20RequestJS%0A%20%20%20%20ProgressCallback%20--%3E%20FileList%0Asubgraph%20Backend_Integration%20%5B%22%E5%90%8E%E7%AB%AF%E9%9B%86%E6%88%90%22%5D%0A%20%20%20%20APIEndpoint%0A%20%20%20%20RequestJS%0A%20%20%20%20ProgressCallback%0A%20%20%20%20RequestJS%20--%3E%20APIEndpoint%0A%20%20%20%20RequestJS%20--%3E%20ProgressCallback%0Aend%0A%0Asubgraph%20Upload_Operations%20%5B%22%E4%B8%8A%E4%BC%A0%E6%93%8D%E4%BD%9C%22%5D%0A%20%20%20%20UploadFunc%0A%20%20%20%20PauseFunc%0A%20%20%20%20StartFunc%0A%20%20%20%20DelFunc%0Aend%0A%0Asubgraph%20File_Processing_Layer%20%5B%22%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E5%B1%82%22%5D%0A%20%20%20%20MD5Calc%0A%20%20%20%20ChunkMgr%0A%20%20%20%20SparkMD5%0A%20%20%20%20MD5Calc%20--%3E%20SparkMD5%0A%20%20%20%20MD5Calc%20--%3E%20ChunkMgr%0Aend%0A%0Asubgraph%20Upload_Component_Layer%20%5B%22%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6%E5%B1%82%22%5D%0A%20%20%20%20UploaderVue%0A%20%20%20%20FileList%0A%20%20%20%20StatusMgr%0A%20%20%20%20UploaderVue%20--%3E%20FileList%0A%20%20%20%20UploaderVue%20--%3E%20StatusMgr%0Aend%0A"})]),fallback:i(()=>s[0]||(s[0]=[a(" Loading... ")])),_:1})),s[8]||(s[8]=h(`<h2 id="文件数据结构设计" tabindex="-1">文件数据结构设计 <a class="header-anchor" href="#文件数据结构设计" aria-label="Permalink to &quot;文件数据结构设计&quot;">​</a></h2><h3 id="上传状态管理" tabindex="-1">上传状态管理 <a class="header-anchor" href="#上传状态管理" aria-label="Permalink to &quot;上传状态管理&quot;">​</a></h3><p>系统通过 <code>STATUS</code> 对象定义了六种不同的上传状态：</p><table tabindex="0"><thead><tr><th>状态</th><th>值</th><th>描述</th><th>颜色代码</th><th>图标</th></tr></thead><tbody><tr><td>空文件</td><td><code>emptyfile</code></td><td>文件为空（0 字节）</td><td><code>#F75000</code></td><td><code>关闭</code></td></tr><tr><td>失败</td><td><code>fail</code></td><td>上传失败并报错</td><td><code>#F75000</code></td><td><code>关闭</code></td></tr><tr><td>初始化中</td><td><code>init</code></td><td>正在进行 MD5 计算</td><td><code>#e6a23c</code></td><td><code>时钟</code></td></tr><tr><td>上传中</td><td><code>uploading</code></td><td>文件正在上传</td><td><code>#409eff</code></td><td><code>上传</code></td></tr><tr><td>完成</td><td><code>upload_finish</code></td><td>上传正常完成</td><td><code>#67c23a</code></td><td><code>成功</code></td></tr><tr><td>秒传</td><td><code>upload_seconds</code></td><td>检测到重复文件（秒传）</td><td><code>#67c23a</code></td><td><code>成功</code></td></tr></tbody></table><h3 id="文件项结构" tabindex="-1">文件项结构 <a class="header-anchor" href="#文件项结构" aria-label="Permalink to &quot;文件项结构&quot;">​</a></h3><p>每个上传任务由一个 <code>fileItem</code> 对象表示，包含以下信息：</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 核心文件属性</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">File               // 原始文件对象</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">string             // 唯一标识符</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fileName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">string        // 显示名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">totalSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">number       // 文件大小（字节）</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filePid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">string         // 父文件夹 ID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// MD5 计算</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">md5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">string            // 计算得到的哈希值</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">md5Progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">number    // 哈希计算进度（0 - 100）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 上传跟踪</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">string         // 当前状态值</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uploadSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">number     // 已上传的字节数</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uploadProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">number // 上传进度（0 - 100）</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">chunkIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">number     // 当前正在上传的分块索引</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 控制标志</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pause</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">boolean         // 暂停状态</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">errorMsg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">string       // 失败时的错误信息</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">fileId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">string         // 服务器分配的文件 ID</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="上传流程" tabindex="-1">上传流程 <a class="header-anchor" href="#上传流程" aria-label="Permalink to &quot;上传流程&quot;">​</a></h2>`,8)),(n(),e(E,null,{default:i(()=>[p(l,{id:"mermaid-273",class:"mermaid",graph:"sequenceDiagram%0A%20%20participant%20Framework.vue%0A%20%20participant%20Uploader.vue%0A%20%20participant%20computeMD5()%0A%20%20participant%20uploadFile()%0A%20%20participant%20%2Ffile%2FuploadFile%0A%0A%20%20Framework.vue-%3E%3EUploader.vue%3A%20addFile(file%2C%20filePid)%0A%20%20Uploader.vue-%3E%3EUploader.vue%3A%20%E5%88%9B%E5%BB%BA%E5%B8%A6%E6%9C%89%20STATUS.init%20%E7%8A%B6%E6%80%81%E7%9A%84%E6%96%87%E4%BB%B6%E9%A1%B9%0A%20%20Uploader.vue-%3E%3EcomputeMD5()%3A%20%E8%AE%A1%E7%AE%97%E6%96%87%E4%BB%B6%E9%A1%B9%E7%9A%84%20MD5%0A%20%20loop%20%5B%E5%AF%B9%E6%AF%8F%E4%B8%AA%E5%88%86%E5%9D%97%5D%0A%20%20%20%20computeMD5()-%3E%3EcomputeMD5()%3A%20%E4%BD%BF%E7%94%A8%20FileReader%20%E8%AF%BB%E5%8F%96%E5%88%86%E5%9D%97%0A%20%20%20%20computeMD5()-%3E%3EcomputeMD5()%3A%20spark.append(%E5%88%86%E5%9D%97)%0A%20%20%20%20computeMD5()-%3E%3EUploader.vue%3A%20%E6%9B%B4%E6%96%B0%20MD5%20%E8%AE%A1%E7%AE%97%E8%BF%9B%E5%BA%A6%0A%20%20%20%20computeMD5()-%3E%3EUploader.vue%3A%20%E8%AE%BE%E7%BD%AE%20STATUS.uploading%20%E7%8A%B6%E6%80%81%E5%92%8C%20MD5%20%E5%80%BC%0A%20%20%20%20Uploader.vue-%3E%3EuploadFile()%3A%20%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6(uid)%0A%20%20%20%20uploadFile()-%3E%3EuploadFile()%3A%20%E5%88%9B%E5%BB%BA%E5%88%86%E5%9D%97%E6%96%87%E4%BB%B6%20%3D%20%E6%96%87%E4%BB%B6%E5%88%87%E7%89%87(%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AE%2C%20%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE)%0A%20%20%20%20uploadFile()-%3E%3E%2Ffile%2FuploadFile%3A%20POST%20%E8%AF%B7%E6%B1%82%EF%BC%8C%E6%90%BA%E5%B8%A6%E5%88%86%E5%9D%97%E6%96%87%E4%BB%B6%E5%92%8C%E5%85%83%E6%95%B0%E6%8D%AE%0A%20%20%20%20%2Ffile%2FuploadFile-%3E%3EuploadFile()%3A%20%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%E5%9B%9E%E8%B0%83(event)%0A%20%20%20%20uploadFile()-%3E%3EUploader.vue%3A%20%E6%9B%B4%E6%96%B0%E5%B7%B2%E4%B8%8A%E4%BC%A0%E5%A4%A7%E5%B0%8F%E5%92%8C%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%0A%20%20%20%20%2Ffile%2FuploadFile-%3E%3EuploadFile()%3A%20%E7%8A%B6%E6%80%81%EF%BC%9A%E4%B8%8A%E4%BC%A0%E5%AE%8C%E6%88%90%2F%E7%A7%92%E4%BC%A0%0A%20%20%20%20uploadFile()-%3E%3EFramework.vue%3A%20%E8%A7%A6%E5%8F%91(%22%E4%B8%8A%E4%BC%A0%E5%9B%9E%E8%B0%83%22)%0A%20%20%20%20%2Ffile%2FuploadFile-%3E%3EuploadFile()%3A%20%E7%BB%A7%E7%BB%AD%E5%A4%84%E7%90%86%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%88%86%E5%9D%97%0A%20%20end%0A"})]),fallback:i(()=>s[1]||(s[1]=[a(" Loading... ")])),_:1})),s[9]||(s[9]=t("h2",{id:"文件处理",tabindex:"-1"},[a("文件处理 "),t("a",{class:"header-anchor",href:"#文件处理","aria-label":'Permalink to "文件处理"'},"​")],-1)),s[10]||(s[10]=t("h3",{id:"分块-md5-计算",tabindex:"-1"},[a("分块 MD5 计算 "),t("a",{class:"header-anchor",href:"#分块-md5-计算","aria-label":'Permalink to "分块 MD5 计算"'},"​")],-1)),(n(),e(E,null,{default:i(()=>[p(l,{id:"mermaid-280",class:"mermaid",graph:"flowchart%20TD%0A%20%20%20%20A%5B%22%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E8%AE%A1%E7%AE%97MD5%E7%9A%84%E5%AE%9E%E4%BE%8B%E3%80%82%22%5D%20--%3E%20B%5B%22%E6%A0%B9%E6%8D%AE%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E8%AE%A1%E7%AE%97%E5%88%87%E7%89%87%E6%95%B0%E7%9B%AE%E3%80%82%22%5D%0A%20%20%20%20B%20--%3E%20C%5B%22%E4%BD%BF%E7%94%A8%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E5%99%A8%EF%BC%8C%E9%80%90%E4%B8%AA%E8%AF%BB%E5%8F%96%E5%88%87%E7%89%87%E5%86%85%E5%AE%B9%E3%80%82%22%5D%0A%20%20%20%20C%20--%3E%20D%5B%22%E5%B0%86%E5%88%87%E7%89%87%E5%86%85%E5%AE%B9%E6%B7%BB%E5%8A%A0%E5%88%B0MD5%E8%AE%A1%E7%AE%97%E5%AE%9E%E4%BE%8B%E4%B8%AD%E3%80%82%22%5D%0A%20%20%20%20D%20--%3E%20E%5B%22%E6%9B%B4%E6%96%B0%E5%BD%93%E5%89%8D%E5%88%87%E7%89%87%E7%B4%A2%E5%BC%95%E3%80%82%22%5D%0A%20%20%20%20E%20--%3E%20F%7B%22%E6%98%AF%E5%90%A6%E8%BF%98%E6%9C%89%E6%9C%AA%E5%A4%84%E7%90%86%E7%9A%84%E5%88%87%E7%89%87%EF%BC%9F%22%7D%0A%20%20%20%20F%20--%3E%7C%22%E6%98%AF%22%7C%20C%0A%20%20%20%20F%20--%3E%7C%22%E5%90%A6%22%7C%20G%5B%22%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%88%87%E7%89%87%E7%9A%84MD5%E8%AE%A1%E7%AE%97%EF%BC%8C%E8%8E%B7%E5%8F%96%E8%AE%A1%E7%AE%97%E5%BE%97%E5%88%B0%E7%9A%84MD5%E5%80%BC%E3%80%82%22%5D%0A%20%20%20%20G%20--%3E%20H%5B%22%E6%9B%B4%E6%96%B0%E6%96%87%E4%BB%B6%E7%9A%84MD5%E8%AE%A1%E7%AE%97%E8%BF%9B%E5%BA%A6%E5%92%8C%E7%8A%B6%E6%80%81%E3%80%82%22%5D%0A%20%20%20%20H%20--%3E%20I%5B%22%E5%B0%86%E8%AE%A1%E7%AE%97%E5%BE%97%E5%88%B0%E7%9A%84MD5%E5%80%BC%E4%BF%9D%E5%AD%98%E5%88%B0%E6%96%87%E4%BB%B6%E5%AF%B9%E8%B1%A1%E4%B8%AD%E3%80%82%22%5D%0A%20%20%20%20I%20--%3E%20J%5B%22%E8%BF%94%E5%9B%9E%E6%96%87%E4%BB%B6UID%E4%BD%9C%E4%B8%BAPromise%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%82%22%5D%0A%0A"})]),fallback:i(()=>s[2]||(s[2]=[a(" Loading... ")])),_:1})),s[11]||(s[11]=h('<div class="tip custom-block"><p class="custom-block-title">🎉MD5 流程主要包括 初始化 、 计算 MD5 值 和 上传分片 三个阶段。</p><p><strong>1.初始化</strong></p><ul><li>获取文件对象：通过 fileItem.file 获取文件对象。</li><li>确定切片方法：根据浏览器兼容性确定文件切片方法，如 File.prototype.slice、File.prototype.mozSlice 或 File.prototype.webkitSlice。<br></li></ul><p><strong>2.计算 MD5 值</strong></p><ul><li>计算切片数目：根据文件大小和每个切片的大小计算出切片的总数。</li><li>初始化索引：将当前处理的切片索引 currentChunk 初始化为 0。</li><li>创建 MD5 实例：使用 SparkMD5.ArrayBuffer 创建一个用于计算 MD5 的实例。</li><li>创建文件读取器：使用 FileReader 对象用于读取文件内容。</li><li>读取并处理切片：定义 loadNext 函数，用于读取当前索引对应的切片内容，并将其添加到 MD5 实例中进行计算。然后更新索引，并在还有剩余切片的情况下继续读取下一个切片。<br></li></ul><p><strong>3.上传分片</strong></p><ul><li>获取文件 UID：通过 getFileByUid 函数根据文件的 UID 获取文件对象。</li><li>上传文件：使用 uploadFile 函数，根据文件的 UID 和初始分片索引开始上传文件。在循环中检查是否有删除或暂停上传的请求，并根据分片索引上传文件至服务器。</li><li>添加文件到列表：通过 addFile 函数接收父文件信息，创建文件对象，并计算其 MD5 值后添加到文件列表中。</li></ul></div><p><code>computeMD5()</code>函数实现细节:</p>',2)),(n(),e(E,null,{default:i(()=>[p(l,{id:"mermaid-351",class:"mermaid",graph:"flowchart%20TD%0A%0AStart%5B%22computeMD5(%E6%96%87%E4%BB%B6%E9%A1%B9)%22%5D%0AInitVars%5B%22%E5%88%9D%E5%A7%8B%E5%8C%96%3A%3Cbr%3E%E5%88%86%E5%9D%97%E6%95%B0%20%3D%20%E5%90%91%E4%B8%8A%E5%8F%96%E6%95%B4(%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%20%2F%20%E5%88%86%E5%9D%97%E5%A4%A7%E5%B0%8F)%3Cbr%3E%E5%BD%93%E5%89%8D%E5%88%86%E5%9D%97%20%3D%200%3Cbr%3Espark%20%3D%20new%20SparkMD5.ArrayBuffer()%22%5D%0ALoadNext%5B%22%E5%8A%A0%E8%BD%BD%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%88%86%E5%9D%97loadNext()%3Cbr%3E%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AE%20%3D%20%E5%BD%93%E5%89%8D%E5%88%86%E5%9D%97%20*%20%E5%88%86%E5%9D%97%E5%A4%A7%E5%B0%8F%3Cbr%3E%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE%20%3D%20min(%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AE%20%2B%20%E5%88%86%E5%9D%97%E5%A4%A7%E5%B0%8F%2C%20%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F)%22%5D%0AReadChunk%5B%22fileReader.readAsArrayBuffer(%3Cbr%3E%E6%96%87%E4%BB%B6%E5%88%87%E7%89%87(%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AE%2C%20%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE))%22%5D%0AOnLoad%5B%22fileReader.onload%3Cbr%3Espark.append(e.target.result)%3Cbr%3E%E5%BD%93%E5%89%8D%E5%88%86%E5%9D%97%2B%2B%22%5D%0ACheckComplete%5B%22%E5%BD%93%E5%89%8D%E5%88%86%E5%9D%97%20%3C%20%E5%88%86%E5%9D%97%E6%95%B0%3F%22%5D%0AUpdateProgress%5B%22%E6%9B%B4%E6%96%B0%20MD5%20%E8%AE%A1%E7%AE%97%E8%BF%9B%E5%BA%A6%3Cbr%3E%3D%20(%E5%BD%93%E5%89%8D%E5%88%86%E5%9D%97%20%2F%20%E5%88%86%E5%9D%97%E6%95%B0)%20*%20100%22%5D%0AFinalize%5B%22md5%20%3D%20spark.end()%3Cbr%3Espark.destroy()%3Cbr%3EMD5%20%E8%AE%A1%E7%AE%97%E8%BF%9B%E5%BA%A6%20%3D%20100%22%5D%0ASetStatus%5B%22%E8%AE%BE%E7%BD%AE%20STATUS.uploading%20%E7%8A%B6%E6%80%81%3Cbr%3E%E5%AD%98%E5%82%A8%20MD5%20%E5%80%BC%22%5D%0A%0A%20%20%20%20Start%20--%3E%20InitVars%0A%20%20%20%20InitVars%20--%3E%20LoadNext%0A%20%20%20%20LoadNext%20--%3E%20ReadChunk%0A%20%20%20%20ReadChunk%20--%3E%20OnLoad%0A%20%20%20%20OnLoad%20--%3E%20CheckComplete%0A%20%20%20%20CheckComplete%20--%3E%7C%E6%98%AF%7C%20UpdateProgress%0A%20%20%20%20UpdateProgress%20--%3E%20LoadNext%0A%20%20%20%20CheckComplete%20--%3E%7C%E5%90%A6%7C%20Finalize%0A%20%20%20%20Finalize%20--%3E%20SetStatus%0A"})]),fallback:i(()=>s[3]||(s[3]=[a(" Loading... ")])),_:1})),s[12]||(s[12]=h(`<div class="tip custom-block"><p class="custom-block-title">主要特点：</p><ul><li><strong>分块大小</strong>：每块 5MB (<code>chunkSize = 1024 * 1024 * 5</code>)</li><li><strong>内存效率</strong>：一次仅将一个分块加载到内存中</li><li><strong>进度更新</strong>：实时反馈进度</li><li><strong>跨浏览器兼容性</strong>：支持 <code>slice</code>、<code>mozSlice</code>、<code>webkitSlice</code></li></ul></div><details class="details custom-block"><summary>代码实现：</summary><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 计算文件的 MD5 值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 会对大文件进行分片处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> computeMD5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fileItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileItem.file</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // slice 分割文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // mozSlice 兼容firefox</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // webkitSlice 兼容webkit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blobSlice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.slice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.mozSlice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.webkitSlice</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // chunkSize 每片的大小</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // chunks 切片数量(向上取整)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file.size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 当前切片的下标为0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentChunk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 创建SparkMD5的实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spark </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparkMD5.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ArrayBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用 FileReader 读取文件的数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileReader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FileReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 加载文件的下一个数据块。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> loadNext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentChunk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> end </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file.size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file.size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fileReader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readAsArrayBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blobSlice.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file, start, end)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//call方法把this指向file，同时传递加载块的开始和结束位置参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  loadNext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 根据真实文件ID获取到对应的包装后的文件对象（包含了自定义的额外属性md5Progress...）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //确保操作的是Vue响应式系统（fileList）中的对象（状态变化能及时反映在UI界面上）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 而非仅值相同的不同对象（直接取传入参数fileItem不是响应式对象，添加属性无法让页面变化），避免潜在的Bug</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resultFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFileByUid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file.uid)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 当读取操作成功完成时调用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fileReader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onload</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 向SparkMD5实例中添加数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 分别计算分片后的MD5值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // e.target.result是一个ArrayBuffer对象，包含了文件切片的内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      //不需要保存所有数据块,计算完的数据可以释放,可以处理超过内存大小的文件,可以显示处理进度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      spark.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e.target.result) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Append array buffer</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 切片下标+1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      currentChunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 如果当前切片下标比切片数量小,说明还可以分片解析</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (currentChunk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunks) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> percent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((currentChunk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunks) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        resultFile.md5Progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> percent</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 再次读取数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        loadNext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 如果当前切片下标不比切片数量小,说明解析到最后了</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //完整的MD5值需要等到所有数据块都处理完成后，通过spark.end()才能得到</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> md5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spark.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        spark.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">destroy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//释放缓存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        resultFile.md5Progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        resultFile.status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.uploading.value </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//状态由初始化变成上传中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        resultFile.md5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> md5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fileItem.uid)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 当读取操作发生错误时调用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fileReader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onerror</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resultFile.md5Progress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resultFile.status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fail.value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fileItem.uid)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据文件ID获取到文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFileByUid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileList.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.file.uid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div></details><h3 id="分块上传流程" tabindex="-1">分块上传流程 <a class="header-anchor" href="#分块上传流程" aria-label="Permalink to &quot;分块上传流程&quot;">​</a></h3>`,3)),(n(),e(E,null,{default:i(()=>[p(l,{id:"mermaid-382",class:"mermaid",graph:"flowchart%20TD%0A%20%20%20%20A%5B%22%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%97%E6%96%87%E4%BB%B6uid%E5%92%8C%E5%88%87%E7%89%87%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AEchunkIndex%E3%80%82%22%5D%20--%3E%20B%5B%22%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%AF%B9%E8%B1%A1%E3%80%81%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E5%92%8C%E5%88%87%E7%89%87%E6%95%B0%E7%9B%AE%E3%80%82%22%5D%0A%20%20%20%20B%20--%3E%20C%5B%22%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E6%AF%8F%E4%B8%AA%E5%88%87%E7%89%87%E3%80%82%22%5D%0A%20%20%20%20C%20--%3E%20D%5B%22%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%EF%BC%8C%E8%8B%A5%E6%9C%89%E5%88%99%E4%B8%AD%E6%96%AD%E4%B8%8A%E4%BC%A0%E3%80%82%22%5D%0A%20%20%20%20D%20--%3E%20E%5B%22%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9A%82%E5%81%9C%E4%B8%8A%E4%BC%A0%EF%BC%8C%E8%8B%A5%E6%98%AF%E5%88%99%E4%B8%AD%E6%96%AD%E4%B8%8A%E4%BC%A0%E3%80%82%22%5D%0A%20%20%20%20E%20--%3E%20F%5B%22%E8%AE%A1%E7%AE%97%E5%BD%93%E5%89%8D%E5%88%87%E7%89%87%E7%9A%84%E8%B5%B7%E5%A7%8B%E5%92%8C%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE%E3%80%82%22%5D%0A%20%20%20%20F%20--%3E%20G%5B%22%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%88%87%E7%89%87%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%B9%E8%B1%A1%E3%80%82%22%5D%0A%20%20%20%20G%20--%3E%20H%5B%22%E5%8F%91%E8%B5%B7%E4%B8%8A%E4%BC%A0%E8%AF%B7%E6%B1%82%EF%BC%8C%E4%BC%A0%E9%80%92%E5%88%87%E7%89%87%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%8F%82%E6%95%B0%E3%80%82%22%5D%0A%20%20%20%20H%20--%3E%20I%5B%22%E7%9B%91%E5%90%AC%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%EF%BC%8C%E6%9B%B4%E6%96%B0%E5%B7%B2%E4%B8%8A%E4%BC%A0%E5%A4%A7%E5%B0%8F%E5%92%8C%E8%BF%9B%E5%BA%A6%E7%99%BE%E5%88%86%E6%AF%94%E3%80%82%22%5D%0A%20%20%20%20I%20--%3E%20J%5B%22%E5%A6%82%E6%9E%9C%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F%EF%BC%8C%E6%9B%B4%E6%96%B0%E6%96%87%E4%BB%B6ID%E5%92%8C%E7%8A%B6%E6%80%81%E3%80%82%22%5D%0A%20%20%20%20J%20--%3E%20K%5B%22%E5%A6%82%E6%9E%9C%E4%B8%8A%E4%BC%A0%E7%8A%B6%E6%80%81%E4%B8%BA%E7%A7%92%E4%BC%A0%E6%88%96%E4%B8%8A%E4%BC%A0%E5%AE%8C%E6%88%90%EF%BC%8C%E8%AE%BE%E7%BD%AE%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%E4%B8%BA100%EF%BC%8C%E5%B9%B6%E8%A7%A6%E5%8F%91%E4%B8%8A%E4%BC%A0%E5%9B%9E%E8%B0%83%E3%80%82%22%5D%0A%20%20%20%20K%20--%3E%20L%5B%22%E7%BB%A7%E7%BB%AD%E5%BE%AA%E7%8E%AF%EF%BC%8C%E4%B8%8A%E4%BC%A0%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%88%87%E7%89%87%E3%80%82%22%5D%0A%20%20%20%20L%20--%3E%20M%7B%22%E5%BE%AA%E7%8E%AF%E6%98%AF%E5%90%A6%E7%BB%93%E6%9D%9F%EF%BC%9F%22%7D%0A%20%20%20%20M%20--%3E%7C%22%E6%98%AF%22%7C%20N%5B%22%E4%B8%8A%E4%BC%A0%E5%AE%8C%E6%88%90%E6%88%96%E4%B8%AD%E9%80%94%E4%B8%AD%E6%96%AD%E4%B8%8A%E4%BC%A0%E3%80%82%22%5D%0A%20%20%20%20M%20--%3E%7C%22%E5%90%A6%22%7C%20C%0A"})]),fallback:i(()=>s[4]||(s[4]=[a(" Loading... ")])),_:1})),s[13]||(s[13]=h('<div class="tip custom-block"><p class="custom-block-title">上传流程主要包括 <code>分片上传</code> 和 <code>更新状态</code> 两个阶段。</p><p><strong>1.分片上传</strong></p><ul><li>从 chunkIndex 开始循环上传切片，判断删除/暂停操作，继续上传（本地）</li><li>获取切片的文件对象后调用上传函数</li><li>使用 proxy.Request 发送上传请求，上传当前切片 chunkFile。</li><li>在 uploadProgressCallback 中更新已上传的大小和上传进度百分比。<br></li></ul><p><strong>2.更新状态</strong></p><ul><li>如果上传结果为空，则中断上传。</li><li>更新文件的 fileId 和状态 status。</li><li>更新当前切片的索引 chunkIndex。<br></li><li>检查上传状态：如果上传状态为秒传或上传完成，更新上传进度为 100% 并触发上传回调 emit(&quot;uploadCallback&quot;)，然后中断上传。</li></ul></div><p><code>uploadFile()</code> 函数通过顺序处理分块来处理实际上传：</p>',2)),(n(),e(E,null,{default:i(()=>[p(l,{id:"mermaid-438",class:"mermaid",graph:"flowchart%20TD%0A%0AStartUpload%5B%22uploadFile(uid%2C%20%E5%88%86%E5%9D%97%E7%B4%A2%E5%BC%95)%22%5D%0AInitLoop%5B%22%E5%BE%AA%E7%8E%AF%20(i%20%3D%20%E5%88%86%E5%9D%97%E7%B4%A2%E5%BC%95%3B%20i%20%3C%20%E5%88%86%E5%9D%97%E6%95%B0%3B%20i%2B%2B)%22%5D%0ACheckDeleted%5B%22%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E5%9C%A8%E5%88%A0%E9%99%A4%E5%88%97%E8%A1%A8%E4%B8%AD%3F%22%5D%0ACancelUpload%5B%22%E4%BB%8E%E5%88%A0%E9%99%A4%E5%88%97%E8%A1%A8%E4%B8%AD%E7%A7%BB%E9%99%A4%EF%BC%8C%3Cbr%3E%E6%98%BE%E7%A4%BA%20'%E4%B8%8A%E4%BC%A0%E5%B7%B2%E5%8F%96%E6%B6%88'%3Cbr%3E%E8%B7%B3%E5%87%BA%E5%BE%AA%E7%8E%AF%22%5D%0ACheckPaused%5B%22%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E6%9A%82%E5%81%9C%3F%22%5D%0APauseUpload%5B%22%E6%98%BE%E7%A4%BA%20'%E4%B8%8A%E4%BC%A0%E5%B7%B2%E6%9A%82%E5%81%9C'%3Cbr%3E%E8%B7%B3%E5%87%BA%E5%BE%AA%E7%8E%AF%22%5D%0ACreateChunk%5B%22%E5%88%86%E5%9D%97%E6%96%87%E4%BB%B6%20%3D%20%E6%96%87%E4%BB%B6%E5%88%87%E7%89%87(%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AE%2C%20%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE)%3Cbr%3E%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AE%20%3D%20i%20*%20%E5%88%86%E5%9D%97%E5%A4%A7%E5%B0%8F%3Cbr%3E%E7%BB%93%E6%9D%9F%E4%BD%8D%E7%BD%AE%20%3D%20min(%E8%B5%B7%E5%A7%8B%E4%BD%8D%E7%BD%AE%20%2B%20%E5%88%86%E5%9D%97%E5%A4%A7%E5%B0%8F%2C%20%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F)%22%5D%0AAPICall%5B%22%E8%AF%B7%E6%B1%82%20POST%20%2Ffile%2FuploadFile%3Cbr%3E%E5%8F%82%E6%95%B0%3A%20%7B%E6%96%87%E4%BB%B6%3A%20%E5%88%86%E5%9D%97%E6%96%87%E4%BB%B6%2C%20%E6%96%87%E4%BB%B6%20ID%2C%20%E7%88%B6%E6%96%87%E4%BB%B6%E5%A4%B9%20ID%2C%3Cbr%3E%E6%96%87%E4%BB%B6%E5%90%8D%2C%20%E6%96%87%E4%BB%B6%20MD5%2C%20%E5%88%86%E5%9D%97%E7%B4%A2%E5%BC%95%3A%20i%2C%20%E5%88%86%E5%9D%97%E6%80%BB%E6%95%B0%7D%22%5D%0AProgressUpdate%5B%22%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%E5%9B%9E%E8%B0%83%3A%3Cbr%3E%E5%B7%B2%E4%B8%8A%E4%BC%A0%E5%A4%A7%E5%B0%8F%20%3D%20i%20*%20%E5%88%86%E5%9D%97%E5%A4%A7%E5%B0%8F%20%2B%20%E5%B7%B2%E5%8A%A0%E8%BD%BD%E5%AD%97%E8%8A%82%E6%95%B0%3Cbr%3E%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%20%3D%20(%E5%B7%B2%E4%B8%8A%E4%BC%A0%E5%A4%A7%E5%B0%8F%20%2F%20%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F)%20*%20100%22%5D%0ACheckResponse%5B%22%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%3F%22%5D%0AComplete%5B%22%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%20%3D%20100%3Cbr%3E%E8%A7%A6%E5%8F%91('%E4%B8%8A%E4%BC%A0%E5%9B%9E%E8%B0%83')%3Cbr%3E%E8%B7%B3%E5%87%BA%E5%BE%AA%E7%8E%AF%22%5D%0ANextChunk%5B%22%E5%88%86%E5%9D%97%E7%B4%A2%E5%BC%95%20%3D%20i%3Cbr%3E%E7%BB%A7%E7%BB%AD%E5%BE%AA%E7%8E%AF%22%5D%0AHandleError%5B%22%E7%8A%B6%E6%80%81%20%3D%20STATUS.fail%3Cbr%3E%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%20%3D%20%E5%93%8D%E5%BA%94%E5%86%85%E5%AE%B9%22%5D%0A%0A%20%20%20%20StartUpload%20--%3E%20InitLoop%0A%20%20%20%20InitLoop%20--%3E%20CheckDeleted%0A%20%20%20%20CheckDeleted%20--%3E%7C%E6%98%AF%7C%20CancelUpload%0A%20%20%20%20CheckDeleted%20--%3E%7C%E5%90%A6%7C%20CheckPaused%0A%20%20%20%20CheckPaused%20--%3E%7C%E6%98%AF%7C%20PauseUpload%0A%20%20%20%20CheckPaused%20--%3E%7C%E5%90%A6%7C%20CreateChunk%0A%20%20%20%20CreateChunk%20--%3E%20APICall%0A%20%20%20%20APICall%20--%3E%20ProgressUpdate%0A%20%20%20%20APICall%20--%3E%20CheckResponse%0A%20%20%20%20CheckResponse%20--%3E%20Complete%0A%20%20%20%20CheckResponse%20--%3E%7C%E7%BB%A7%E7%BB%AD%7C%20NextChunk%0A%20%20%20%20NextChunk%20--%3E%20InitLoop%0A%20%20%20%20CheckResponse%20--%3E%20HandleError%0A"})]),fallback:i(()=>s[5]||(s[5]=[a(" Loading... ")])),_:1})),s[14]||(s[14]=h(`<details class="details custom-block"><summary>代码实现</summary><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//上传文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uploadFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">chunkIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chunkIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFileByUid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(uid)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fileSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentFile.totalSize</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentFile.file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chunks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ceil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fileSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkIndex; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunks; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> delIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> delList.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">indexOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(uid)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (delIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      //在删除列表找到了该文件的id，说明该文件被删除了，跳出循环取消上传</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      delList.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">splice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(delIndex, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      proxy.Message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;已取消上传&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFileByUid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(uid)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (currentFile.pause) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      proxy.Message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;已暂停上传&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //开始上传操作(分片上传)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> end </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(start, end)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uploadResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> proxy.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      url: api.upload,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      params: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        file: chunkFile,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        fileId: currentFile.fileId, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//服务端返回的独一无二的id，不用前端elment的uid（可能会重）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        filePid: currentFile.filePid,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        fileName: currentFile.fileName,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        fileMd5: currentFile.md5,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        chunkIndex: i,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        chunks: chunks,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      showLoading: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dataType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      showError: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 报错</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      errorCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">errorMsg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        currentFile.status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.fail.value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        currentFile.errorMsg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> errorMsg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      //显示进度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      uploadProgressCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //当前分片已经被浏览器成功上传的部分</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.loaded</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (loaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          loaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        currentFile.uploadSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loaded </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//前面已上传的+当前已上传</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        currentFile.uploadProgress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((currentFile.uploadSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //对请求返回结果做处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (uploadResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentFile.fileId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uploadResult.data.fileId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentFile.status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[uploadResult.data.status].value</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //已成功上传的分片下标号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    currentFile.chunkIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploadResult.data.status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.upload_seconds.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uploadResult.data.status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.upload_finish.value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      currentFile.uploadProgress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 上传结束后,触发uploaderCallback,将Franmework中的列表刷新</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      emit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uploadCallback&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      break</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div></details><h2 id="上传控制" tabindex="-1">上传控制 <a class="header-anchor" href="#上传控制" aria-label="Permalink to &quot;上传控制&quot;">​</a></h2><h3 id="暂停和恢复功能" tabindex="-1">暂停和恢复功能 <a class="header-anchor" href="#暂停和恢复功能" aria-label="Permalink to &quot;暂停和恢复功能&quot;">​</a></h3><p>系统提供对上传操作的精细控制：</p><table tabindex="0"><thead><tr><th>函数</th><th>用途</th><th>实现方式</th></tr></thead><tbody><tr><td><code>pauseUpload(uid)</code></td><td>暂停正在进行的上传</td><td>设置 <code>fileItem.pause = true</code></td></tr><tr><td><code>startUpload(uid)</code></td><td>恢复暂停的上传</td><td>设置 <code>pause = false</code>，从 <code>chunkIndex + 1</code> 继续上传</td></tr><tr><td><code>delUpload(uid, index)</code></td><td>取消/移除上传</td><td>将 <code>uid</code> 添加到 <code>delList</code>，从 <code>fileList</code> 中移除</td></tr></tbody></table><p>暂停/恢复机制的工作原理如下：</p><ol><li><strong>暂停</strong>：设置一个标志，中断上传循环</li><li><strong>恢复</strong>：从最后一个成功上传的分块继续上传</li><li><strong>取消</strong>：添加到删除列表，在下一次迭代时取消上传</li></ol><h2 id="api-集成" tabindex="-1">API 集成 <a class="header-anchor" href="#api-集成" aria-label="Permalink to &quot;API 集成&quot;">​</a></h2><h3 id="上传端点通信" tabindex="-1">上传端点通信 <a class="header-anchor" href="#上传端点通信" aria-label="Permalink to &quot;上传端点通信&quot;">​</a></h3><p>系统通过集中的 <code>Request.js</code> 客户端与 <code>/file/uploadFile</code> 端点进行通信：</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 每个分块的请求参数</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chunkFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,           </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 二进制分块数据</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  fileId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">currentFile.fileId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 服务器分配的唯一 ID</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  filePid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">currentFile.filePid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 父文件夹 ID</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  fileName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">currentFile.fileName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 原始文件名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  fileMd5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">currentFile.md5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 完整文件的 MD5 哈希值</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  chunkIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,             </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// 当前分块索引（从 0 开始）</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  chunks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chunks             // 分块总数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="进度跟踪集成" tabindex="-1">进度跟踪集成 <a class="header-anchor" href="#进度跟踪集成" aria-label="Permalink to &quot;进度跟踪集成&quot;">​</a></h3><p>上传进度通过 <code>uploadProgressCallback</code> 进行跟踪：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadProgressCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.loaded </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前分块已上传的字节数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (loaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize) loaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 总上传量 = 之前的分块 + 当前分块的进度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  currentFile.uploadSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> loaded</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  currentFile.uploadProgress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((currentFile.uploadSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fileSize) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="用户界面组件" tabindex="-1">用户界面组件 <a class="header-anchor" href="#用户界面组件" aria-label="Permalink to &quot;用户界面组件&quot;">​</a></h2><h3 id="上传队列显示" tabindex="-1">上传队列显示 <a class="header-anchor" href="#上传队列显示" aria-label="Permalink to &quot;上传队列显示&quot;">​</a></h3><p>该组件以可滚动列表的形式呈现上传任务，列表行颜色交替显示：</p><ul><li><strong>文件信息</strong>：名称、大小、进度条</li><li><strong>状态指示器</strong>：图标和文本，带有颜色编码</li><li><strong>控制按钮</strong>：根据状态显示暂停/恢复、删除/清理按钮</li><li><strong>进度显示</strong>：MD5 计算使用圆形进度条，上传使用线性进度条</li></ul><h3 id="可视化状态指示器" tabindex="-1">可视化状态指示器 <a class="header-anchor" href="#可视化状态指示器" aria-label="Permalink to &quot;可视化状态指示器&quot;">​</a></h3><p>每个上传状态都有独特的可视化表示：</p>`,20)),(n(),e(E,null,{default:i(()=>[p(l,{id:"mermaid-575",class:"mermaid",graph:"flowchart%20TD%0A%0AIcon%5B%22%E5%9B%BE%E6%A0%87%E5%AD%97%E4%BD%93%20icon-%7B%E7%8A%B6%E6%80%81%E5%9B%BE%E6%A0%87%7D%22%5D%0AText%5B%22%E7%8A%B6%E6%80%81%E6%8F%8F%E8%BF%B0%22%5D%0AProgress%5B%22%E8%BF%9B%E5%BA%A6%E6%8C%87%E7%A4%BA%E5%99%A8%22%5D%0AControls%5B%22%E6%93%8D%E4%BD%9C%E6%8C%89%E9%92%AE%22%5D%0AInit%5B%22MD5%20%E8%AE%A1%E7%AE%97%E8%BF%9B%E5%BA%A6%3Cbr%3Eel-progress%20%E5%9C%86%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1%22%5D%0AUploading%5B%22%E6%9A%82%E5%81%9C%2F%E4%B8%8A%E4%BC%A0%E6%8C%89%E9%92%AE%3Cbr%3E%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%E6%9D%A1%22%5D%0AComplete%5B%22%E6%B8%85%E7%90%86%E6%8C%89%E9%92%AE%3Cbr%3E100%25%20%E8%BF%9B%E5%BA%A6%22%5D%0AFailed%5B%22%E5%88%A0%E9%99%A4%E6%8C%89%E9%92%AE%3Cbr%3E%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%22%5D%0A%0A%20%20%20%20Icon%20--%3E%20Init%0A%20%20%20%20Text%20--%3E%20Uploading%0A%20%20%20%20Progress%20--%3E%20Complete%0A%20%20%20%20Controls%20--%3E%20Failed%0Asubgraph%20StateDependent_Controls%20%5B%22%E7%8A%B6%E6%80%81%E7%9B%B8%E5%85%B3%E6%8E%A7%E5%88%B6%22%5D%0A%20%20%20%20Init%0A%20%20%20%20Uploading%0A%20%20%20%20Complete%0A%20%20%20%20Failed%0Aend%0A%0Asubgraph%20Status_Display_Elements%20%5B%22%E7%8A%B6%E6%80%81%E6%98%BE%E7%A4%BA%E5%85%83%E7%B4%A0%22%5D%0A%20%20%20%20Icon%0A%20%20%20%20Text%0A%20%20%20%20Progress%0A%20%20%20%20Controls%0Aend%0A"})]),fallback:i(()=>s[6]||(s[6]=[a(" Loading... ")])),_:1}))])}const D=k(A,[["render",B]]);export{b as __pageData,D as default};
