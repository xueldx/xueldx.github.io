import{_ as p,C as l,c as d,o as s,a8 as B,b as i,w as e,a as o,G as n,a9 as t}from"./chunks/framework.DW4T_yAZ.js";const C=JSON.parse('{"title":"问卷核心组件库","description":"","frontmatter":{},"headers":[],"relativePath":"projects/QuickSurvey-fe/Component-Library/Component-Library.md","filePath":"projects/QuickSurvey-fe/Component-Library/Component-Library.md","lastUpdated":1749448992000}'),r={name:"projects/QuickSurvey-fe/Component-Library/Component-Library.md"};function A(c,E,h,k,u,D){const a=l("Mermaid");return s(),d("div",null,[E[6]||(E[6]=B('<h1 id="问卷核心组件库" tabindex="-1">问卷核心组件库 <a class="header-anchor" href="#问卷核心组件库" aria-label="Permalink to &quot;问卷核心组件库&quot;">​</a></h1><h2 id="组件库简介" tabindex="-1"><code>组件库简介</code> <a class="header-anchor" href="#组件库简介" aria-label="Permalink to &quot;`组件库简介`&quot;">​</a></h2><blockquote><p>组件库是构建问卷的<code>核心资源</code>，它为用户提供了丰富多样、可灵活添加至问卷中的核心<code>组件</code>。组件库不仅清晰界定了各类可用组件的<code>具体类型</code>，还详细说明了每个组件的<code>配置</code>选项，同时精心规划了这些组件在用户界面中的<code>呈现</code>与组织形式，助力用户轻松打造<code>个性化</code>的问卷。</p></blockquote><p>组件库将各种组成问卷的核心组件组织成<code>逻辑组</code>，并提供用户界面，用于将这些组件添加到问卷中。当用户从库中<code>选择</code>一个组件时，系统会创建该组件的<code>新实例</code>，并设置<code>默认属性</code>，然后将其<code>添加</code>到问卷编辑器中。</p>',4)),(s(),i(t,null,{default:e(()=>[n(a,{id:"mermaid-14",class:"mermaid",graph:"graph%20TD%0AA%5B%E7%BB%84%E4%BB%B6%E5%BA%93%E7%B3%BB%E7%BB%9F%5D%20--%3E%20B%5B%E7%BB%84%E4%BB%B6%E5%BA%93%5D%0AB%20--%3E%20C%5B%E5%BA%93%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%5D%0AB%20--%3E%20D%5B%E7%BB%84%E4%BB%B6%E5%88%86%E7%BB%84%5D%0AB%20--%3E%20E%5B%E7%BB%84%E4%BB%B6%E9%85%8D%E7%BD%AE%5D%0AB%20--%3E%7C%E6%B7%BB%E5%8A%A0%E7%BB%84%E4%BB%B6%7C%20F%5BRedux%20Store%5D%0AC%20--%3E%20G%5B%E5%B7%A6%E4%BE%A7%E9%9D%A2%E6%9D%BF%5D%0AC%20--%3E%20H%5B%E6%A0%87%E7%AD%BE%E7%95%8C%E9%9D%A2%5D%0AC%20--%3E%20I%5B%E6%8C%89%E7%B1%BB%E5%88%AB%E5%88%86%E7%BB%84%E7%9A%84%E7%BB%84%E4%BB%B6%E5%88%97%E8%A1%A8%5D%0AD%20--%3E%20J%5B%E6%96%87%E6%9C%AC%E7%BB%84%5D%0AD%20--%3E%20K%5B%E8%BE%93%E5%85%A5%E7%BB%84%5D%0AD%20--%3E%20L%5B%E9%80%89%E6%8B%A9%E7%BB%84%5D%0AE%20--%3E%20M%5B%E7%BB%84%E4%BB%B6%E7%B1%BB%E5%9E%8B%5D%0AE%20--%3E%20N%5B%E5%B1%9E%E6%80%A7%E5%AE%9A%E4%B9%89%5D%0AE%20--%3E%20O%5B%E9%BB%98%E8%AE%A4%E5%80%BC%5D%0A"})]),fallback:e(()=>E[0]||(E[0]=[o(" Loading... ")])),_:1})),E[7]||(E[7]=B('<h2 id="组件配置结构" tabindex="-1"><code>组件配置结构</code> <a class="header-anchor" href="#组件配置结构" aria-label="Permalink to &quot;`组件配置结构`&quot;">​</a></h2><p>组件库中的每个组件都有一个<code>标准化</code>的配置结构，定义了其<code>行为</code>、<code>外观</code>和<code>属性</code>。这种结构确保了不同组件类型之间的<code>一致性</code>，并<code>简化</code>了使用新组件<code>扩展</code>库的过程。</p>',2)),(s(),i(t,null,{default:e(()=>[n(a,{id:"mermaid-21",class:"mermaid",graph:"classDiagram%0Aclass%20ComponentConfType%20%7B%0A%20%20%20%20%2Bstring%20title%0A%20%20%20%20%2Bstring%20type%0A%20%20%20%20%2BFC%20Component%0A%20%20%20%20%2BFC%20PropComponent%0A%20%20%20%20%2BComponentPropsType%20defaultProps%0A%20%20%20%20%2BFC%3F%20StatComponent%0A%7D%0Aclass%20ComponentPropsType%20%7B%0A%20%20%20%20%2BQuestionInputPropsType%0A%20%20%20%20%2BQuestionTitlePropsType%0A%20%20%20%20%2BQuestionParagraphPropsType%0A%20%20%20%20%2BQuestionInfoPropsType%0A%20%20%20%20%2BQuestionTextareaPropsType%0A%20%20%20%20%2BQuestionRadioPropsType%0A%20%20%20%20%2BQuestionCheckboxPropsType%0A%7D%0Aclass%20ComponentStatPropsType%20%7B%0A%20%20%20%20%2BQuestionRadioStatPropsType%0A%20%20%20%20%2BQuestionCheckboxStatPropsType%0A%7D%0AComponentConfType%20--%3E%20ComponentPropsType%20%3A%20%E4%BD%BF%E7%94%A8%0AComponentConfType%20--%3E%20ComponentStatPropsType%20%3A%20%E4%BD%BF%E7%94%A8%0A"})]),fallback:e(()=>E[1]||(E[1]=[o(" Loading... ")])),_:1})),E[8]||(E[8]=B('<div class="info custom-block"><p class="custom-block-title">组件配置包括：</p><ul><li><strong>标题</strong>：在组件库中显示的<code>名称</code></li><li><strong>类型</strong>：组件类型的<code>唯一标识</code>符</li><li><strong>Component</strong>：用于在问题编辑器<code>画布</code>中渲染的 <code>React 组件</code></li><li><strong>PropComponent</strong>：用于编辑<code>组件属性</code>的 <code>React 组件</code></li><li><strong>DefaultProps</strong>：组件新实例的<code>初始</code>属性</li><li><strong>StatComponent</strong>（可选）：用于显示响应<code>统计信息的组件</code>(单选和多选组件有次配置)</li></ul></div><h2 id="组件库与问卷编辑器的集成" tabindex="-1"><code>组件库与问卷编辑器的集成</code> <a class="header-anchor" href="#组件库与问卷编辑器的集成" aria-label="Permalink to &quot;`组件库与问卷编辑器的集成`&quot;">​</a></h2><blockquote><p>下图说明了如何将组件类型集成到问题编辑器界面中：</p></blockquote>',3)),(s(),i(t,null,{default:e(()=>[n(a,{id:"mermaid-64",class:"mermaid",graph:"graph%20TD%0AA%5B%E7%BC%96%E8%BE%91%E9%A1%B5%E9%9D%A2%5D%20--%3E%20B%5B%E5%B7%A6%E9%9D%A2%E6%9D%BF%5D%0AA%20--%3E%20C%5BEditCanvas%5D%0AA%20--%3E%20D%5B%E5%8F%B3%E9%9D%A2%E6%9D%BF%5D%0AB%20--%3E%20E%5BComponentsLib%5D%0AC%20--%3E%20G%5B%E6%89%80%E9%80%89%E7%BB%84%E4%BB%B6%5D%0AG%20--%3E%20H%5B%E7%B1%BB%E5%9E%8B%5D%0AH%20--%3E%20I%5BgetComponentConfByType%5D%0AI%20--%3E%20J%5B%E7%BB%84%E4%BB%B6%E5%AE%9E%E4%BE%8BComponent%5D%0AJ%20--%3E%20K%5B%E7%BB%84%E4%BB%B6%E6%B8%B2%E6%9F%93%5D%0AE%20--%3E%20L%5B%E7%BB%84%E4%BB%B6ConfGroup%5D%0AL%20--%3E%20M%5B%E7%BB%84%E4%BB%B6%E7%B1%BB%E5%9E%8B%5D%0AD%20--%3E%20N%5B%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%5D%0AN%20--%3E%20O%5BPropComponent%5D%0AJ%20--%3E%20O%0A"})]),fallback:e(()=>E[2]||(E[2]=[o(" Loading... ")])),_:1})),E[9]||(E[9]=B('<h2 id="组件分组" tabindex="-1"><code>组件分组</code> <a class="header-anchor" href="#组件分组" aria-label="Permalink to &quot;`组件分组`&quot;">​</a></h2><p>组件根据其功能组织成<code>逻辑组</code>，以提高可用性。这种分组帮助用户<code>快速</code>找到她们需要的组件类型。</p><table tabindex="0"><thead><tr><th>组 ID</th><th>组名称</th><th>组件</th></tr></thead><tbody><tr><td>textGroup</td><td>文本显示</td><td>Info, Title, Paragraph</td></tr><tr><td>inputGroup</td><td>用户输入</td><td>Input, Textarea</td></tr><tr><td>selectGroup</td><td>用户选择</td><td>Radio, Checkbox</td></tr></tbody></table><h2 id="可用组件类型" tabindex="-1"><code>可用组件类型</code> <a class="header-anchor" href="#可用组件类型" aria-label="Permalink to &quot;`可用组件类型`&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">组件库包括以下组件类型：</p><ol><li><strong>问卷标题</strong>（questionTitle）- 问卷的标题组件</li><li><strong>问卷输入框</strong>（questionInput）- 单行文本输入字段</li><li><strong>问卷文本框</strong>（questionTextarea）- 多行文本输入区域</li><li><strong>问卷单选框</strong>（questionRadio）- 单选按钮选择</li><li><strong>问卷多选框</strong>（questionCheckbox）- 复选框选择</li><li><strong>问卷段落</strong>（questionParagraph）- 段落文本显示</li><li><strong>问卷信息</strong>（questionInfo）- 信息文本显示</li></ol><p>每个组件都作为问卷组件目录中的<code>单独模块</code>实现。</p></div><h2 id="组件库界面" tabindex="-1"><code>组件库界面</code> <a class="header-anchor" href="#组件库界面" aria-label="Permalink to &quot;`组件库界面`&quot;">​</a></h2><p>组件库在问题<code>编辑器</code>界面的<code>左侧面板</code>中呈现给用户。它使用标签式界面，其中<code>&quot;组件库&quot;标签</code>显示按类型分组的可用<code>组件</code>。</p>',7)),(s(),i(t,null,{default:e(()=>[n(a,{id:"mermaid-172",class:"mermaid",graph:"graph%20TD%0AA%5B%E5%B7%A6%E4%BE%A7%E9%9D%A2%E6%9D%BF%E7%95%8C%E9%9D%A2%5D%20--%3E%20B%5B%E6%A0%87%E7%AD%BE%E7%BB%84%E4%BB%B6%5D%0AB%20--%3E%20C%5B%E7%BB%84%E4%BB%B6%E6%A0%87%E7%AD%BE%5D%0AB%20--%3E%20D%5B%E5%9B%BE%E5%B1%82%E6%A0%87%E7%AD%BE%5D%0AC%20--%3E%20E%5B%E7%BB%84%E4%BB%B6%E5%BA%93%20UI%5D%0AD%20--%3E%20F%5B%E5%9B%BE%E5%B1%82%20UI%5D%0AE%20--%3E%20G%5B%E6%96%87%E6%9C%AC%E7%BB%84%E9%83%A8%E5%88%86%5D%0AE%20--%3E%20H%5B%E8%BE%93%E5%85%A5%E7%BB%84%E9%83%A8%E5%88%86%5D%0AE%20--%3E%20I%5B%E9%80%89%E6%8B%A9%E7%BB%84%E9%83%A8%E5%88%86%5D%0AG%20--%3E%20J%5B%E6%A0%87%E9%A2%98%E7%BB%84%E4%BB%B6%5D%0AG%20--%3E%20K%5B%E6%AE%B5%E8%90%BD%E7%BB%84%E4%BB%B6%5D%0AG%20--%3E%20L%5B%E4%BF%A1%E6%81%AF%E7%BB%84%E4%BB%B6%5D%0AH%20--%3E%20M%5B%E8%BE%93%E5%85%A5%E6%A1%86%E7%BB%84%E4%BB%B6%5D%0AH%20--%3E%20N%5B%E6%96%87%E6%9C%AC%E5%8C%BA%E5%9F%9F%E7%BB%84%E4%BB%B6%5D%0AI%20--%3E%20O%5B%E5%8D%95%E9%80%89%E6%A1%86%E7%BB%84%E4%BB%B6%5D%0AI%20--%3E%20P%5B%E5%A4%9A%E9%80%89%E6%A1%86%E7%BB%84%E4%BB%B6%5D%0A"})]),fallback:e(()=>E[3]||(E[3]=[o(" Loading... ")])),_:1})),E[10]||(E[10]=B('<h2 id="向问卷添加组件" tabindex="-1"><code>向问卷添加组件</code> <a class="header-anchor" href="#向问卷添加组件" aria-label="Permalink to &quot;`向问卷添加组件`&quot;">​</a></h2><p>当用户<code>点击</code>组件库中的组件时，系统会创建该组件的<code>新实例</code>，设置默认<code>属性</code>，并将其<code>添加</code>到问卷中。</p>',2)),(s(),i(t,null,{default:e(()=>[n(a,{id:"mermaid-179",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20%E7%94%A8%E6%88%B7%0A%20%20%20%20participant%20%E7%BB%84%E4%BB%B6%E5%BA%93UI%0A%20%20%20%20participant%20ReduxStore%20as%20%22Redux%20Store%22%0A%20%20%20%20participant%20%E9%97%AE%E5%8D%B7%E7%BC%96%E8%BE%91%E5%99%A8%0A%0A%20%20%20%20%E7%94%A8%E6%88%B7-%3E%3E%E7%BB%84%E4%BB%B6%E5%BA%93UI%3A%20%E7%82%B9%E5%87%BB%E7%BB%84%E4%BB%B6%0A%20%20%20%20Note%20over%20%E7%BB%84%E4%BB%B6%E5%BA%93UI%3A%20%E8%B0%83%E7%94%A8%20handleClick%20%E5%87%BD%E6%95%B0%0A%20%20%20%20%E7%BB%84%E4%BB%B6%E5%BA%93UI-%3E%3EReduxStore%3A%20dispatch(addComponent)%0A%20%20%20%20Note%20over%20ReduxStore%3A%20%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%2C%20%E5%8C%85%E5%90%AB%3A%3Cbr%2F%3E%20-%20%E5%94%AF%E4%B8%80%20fe_id%20(nanoid)%3Cbr%2F%3E%20-%20%E6%9D%A5%E8%87%AA%E9%85%8D%E7%BD%AE%E7%9A%84%E6%A0%87%E9%A2%98%3Cbr%2F%3E%20-%20%E9%BB%98%E8%AE%A4%20isHidden%20(false)%3Cbr%2F%3E%20-%20%E9%BB%98%E8%AE%A4%20isLocked%20(false)%3Cbr%2F%3E%20-%20%E6%9D%A5%E8%87%AA%E9%85%8D%E7%BD%AE%E7%9A%84%E7%B1%BB%E5%9E%8B%3Cbr%2F%3E%20-%20%E6%9D%A5%E8%87%AA%20defaultProps%20%E7%9A%84%E5%B1%9E%E6%80%A7%0A%20%20%20%20ReduxStore-%3E%3E%E9%97%AE%E5%8D%B7%E7%BC%96%E8%BE%91%E5%99%A8%3A%20%E4%BD%BF%E7%94%A8%E6%96%B0%E7%BB%84%E4%BB%B6%E6%9B%B4%E6%96%B0%20UI%0A"})]),fallback:e(()=>E[4]||(E[4]=[o(" Loading... ")])),_:1})),E[11]||(E[11]=B(`<p>组件实例对象具有以下结构：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fe_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 唯一标识符</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 组件标题</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  isHidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: boolean,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可见性状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  isLocked</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: boolean,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 锁定状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 组件类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  props</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ComponentProps </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 特定类型的属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="组件属性编辑" tabindex="-1"><code>组件属性编辑</code> <a class="header-anchor" href="#组件属性编辑" aria-label="Permalink to &quot;\`组件属性编辑\`&quot;">​</a></h2><p>每个<code>组件类型</code>都有一个<code>专用</code>的<code>属性编辑</code>器组件，该组件呈现用于编辑组件属性的表单：</p>`,4)),(s(),i(t,null,{default:e(()=>[n(a,{id:"mermaid-190",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20%E7%94%A8%E6%88%B7%0A%20%20%20%20participant%20%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%0A%20%20%20%20participant%20PropComponent%20as%20%22PropComponent%20%E7%BB%84%E4%BB%B6%22%0A%20%20%20%20participant%20Redux%0A%0A%20%20%20%20%E7%94%A8%E6%88%B7-%3E%3E%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%3A%20%E9%80%89%E6%8B%A9%E7%BB%84%E4%BB%B6%0A%20%20%20%20%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7-%3E%3ERedux%3A%20%E8%8E%B7%E5%8F%96%E6%89%80%E9%80%89%E7%BB%84%E4%BB%B6%0A%20%20%20%20Redux--%3E%3E%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%3A%20%E8%BF%94%E5%9B%9E%E7%BB%84%E4%BB%B6%E6%95%B0%E6%8D%AE%0A%20%20%20%20%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7-%3E%3E%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%3A%20%E8%8E%B7%E5%8F%96%E7%BB%84%E4%BB%B6%E7%B1%BB%E5%9E%8B%0A%20%20%20%20%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7-%3E%3E%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%3A%20%E6%9F%A5%E6%89%BE%20PropComponent%0A%20%20%20%20%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7-%3E%3EPropComponent%3A%20%E4%BD%BF%E7%94%A8%20props%20%E6%B8%B2%E6%9F%93%0A%20%20%20%20%E7%94%A8%E6%88%B7-%3E%3EPropComponent%3A%20%E6%9B%B4%E6%94%B9%E5%B1%9E%E6%80%A7%0A%20%20%20%20PropComponent-%3E%3E%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%3A%20%E4%BD%BF%E7%94%A8%E6%96%B0%20props%20%E8%B0%83%E7%94%A8%20onChange%0A%20%20%20%20%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7-%3E%3ERedux%3A%20%E8%B0%83%E5%BA%A6%20changeComponentProps%0A%20%20%20%20Redux--%3E%3E%E7%BB%84%E4%BB%B6%E5%B1%9E%E6%80%A7%3A%20%E6%9B%B4%E6%96%B0%E7%8A%B6%E6%80%81%0A%20%20%20%20Redux--%3E%3EPropComponent%3A%20%E6%9B%B4%E6%96%B0%20props%0A"})]),fallback:e(()=>E[5]||(E[5]=[o(" Loading... ")])),_:1})),E[12]||(E[12]=B('<div class="info custom-block"><p class="custom-block-title">属性编辑工作流：</p><ol><li>用户在画布中选择一个组件</li><li>系统识别组件类型</li><li>相应的 PropComponent 使用组件的当前属性进行渲染</li><li>用户在 PropComponent 中进行更改</li><li>将更改 dispatch 到 Redux 以更新组件状态</li><li>画布将重新渲染以反映更改</li></ol></div><h2 id="组件查找工具" tabindex="-1"><code>组件查找工具</code> <a class="header-anchor" href="#组件查找工具" aria-label="Permalink to &quot;`组件查找工具`&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">组件库提供了一个工具函数，用于通过<code>类型</code>查找<code>组件配置</code>：</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getComponentConfByType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ComponentConfList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> component.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> type)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这个函数在整个应用程序中用于在<code>渲染组件</code>或其<code>属性编辑器</code>时访问组件<code>配置</code>。</p></div><h2 id="视觉样式" tabindex="-1"><code>视觉样式</code> <a class="header-anchor" href="#视觉样式" aria-label="Permalink to &quot;`视觉样式`&quot;">​</a></h2><p>组件库 UI 使用<code>网格布局</code>和样式化的组件卡片。库中的每个<code>组件</code>都显示在一个<code>卡片</code>中，<code>预览</code>它在问卷中的外观。UI 设计直观且视觉吸引人，具有悬停效果以指示交互性。</p><div class="info custom-block"><p class="custom-block-title">组件卡片的样式包括：</p><ul><li>浅灰色背景（#f5f5f5）</li><li>白色边框，悬停时变为较深的颜色（#d9d9d9）</li><li>圆角（3px 边框半径）</li><li>指针光标，表示可点击</li></ul></div><p>当有许多组件可用时，库容器包含一个滚动条用于导航。</p>',7))])}const g=p(r,[["render",A]]);export{C as __pageData,g as default};
