import{_ as d,C as n,c as s,o as i,a8 as l,b as o,j as e,w as A,a,G as r,a9 as B}from"./chunks/framework.DW4T_yAZ.js";const C=JSON.parse('{"title":"用户身份认证","description":"","frontmatter":{},"headers":[],"relativePath":"projects/QuickSurvey-fe/Authentication/Authentication.md","filePath":"projects/QuickSurvey-fe/Authentication/Authentication.md","lastUpdated":1749448992000}'),c={name:"projects/QuickSurvey-fe/Authentication/Authentication.md"};function p(u,E,h,F,m,D){const t=n("Mermaid");return i(),s("div",null,[E[5]||(E[5]=l('<h1 id="用户身份认证" tabindex="-1">用户身份认证 <a class="header-anchor" href="#用户身份认证" aria-label="Permalink to &quot;用户身份认证&quot;">​</a></h1><h2 id="简介" tabindex="-1"><code>简介</code> <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;`简介`&quot;">​</a></h2><blockquote><p>本节描述了在问卷小筑中实现的<code>认证系统</code>。它涵盖了用户登录和注册流程、令牌（<code>Token</code>）管理、<code>会话持久化</code>以及如何在整个应用程序中<code>管理认证</code>状态。</p></blockquote><h2 id="认证架构概述" tabindex="-1"><code>认证架构概述</code> <a class="header-anchor" href="#认证架构概述" aria-label="Permalink to &quot;`认证架构概述`&quot;">​</a></h2><p>认证系统由几个相互连接的组件组成，它们共同提供安全的用户认证和会话管理。</p>',5)),(i(),o(B,null,{default:A(()=>[r(t,{id:"mermaid-17",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20A%5B%22%E7%94%A8%E6%88%B7%22%5D%20--%3E%20B%5B%22%E7%99%BB%E5%BD%95%2F%E6%B3%A8%E5%86%8C%E9%A1%B5%E9%9D%A2%22%5D%0A%20%20%20%20B%20--%3E%20C%5B%22%E7%99%BB%E5%BD%95%E7%BB%84%E4%BB%B6%22%5D%0A%20%20%20%20B%20--%3E%20D%5B%22%E6%B3%A8%E5%86%8C%E7%BB%84%E4%BB%B6%22%5D%0A%20%20%20%20B%20--%3E%20J%5B%22Redux%20Store%22%5D%0A%20%20%20%20C%20--%3E%20E%5B%22loginService%22%5D%0A%20%20%20%20D%20--%3E%20F%5B%22registerService%22%5D%0A%20%20%20%20E%20--%3E%20G%5B%22getUserInfoService%22%5D%0A%20%20%20%20F%20--%3E%20G%0A%20%20%20%20B%20--%3E%20H%5B%22%E8%AE%A4%E8%AF%81%E6%9C%8D%E5%8A%A1%22%5D%0A%20%20%20%20H%20%3C--%3E%20I%5B%22%E4%BB%A4%E7%89%8C%E7%AE%A1%E7%90%86%22%5D%0A%0A%0A%20%20%20%20J%20--%3E%20H%0A%20%20%20%20H%20--%3E%20K%5B%22HTTP%20%E5%AE%A2%E6%88%B7%E7%AB%AF%20(axios)%22%5D%0A%20%20%20%20K%5B%22HTTP%20%E5%AE%A2%E6%88%B7%E7%AB%AF%20(axios)%22%5D%3C--%3EI%0A%0A%20%20%20%20K%20--%3E%20L%5B%22%E5%90%8E%E7%AB%AF%20API%22%5D%0A%0A%20%20%20%20subgraph%20%E8%AE%A4%E8%AF%81%E7%BB%84%E4%BB%B6%0A%20%20%20%20%20%20%20%20C%0A%20%20%20%20%20%20%20%20D%0A%20%20%20%20end%0A%0A%20%20%20%20subgraph%20%E7%94%A8%E6%88%B7%E6%9C%8D%E5%8A%A1%0A%20%20%20%20%20%20%20%20E%0A%20%20%20%20%20%20%20%20F%0A%20%20%20%20%20%20%20%20G%0A%20%20%20%20end%0A"})]),fallback:A(()=>E[0]||(E[0]=[a(" Loading... ")])),_:1})),E[6]||(E[6]=e("h2",{id:"用户注册流程",tabindex:"-1"},[e("code",null,"用户注册流程"),a(),e("a",{class:"header-anchor",href:"#用户注册流程","aria-label":'Permalink to "`用户注册流程`"'},"​")],-1)),E[7]||(E[7]=e("p",null,"注册流程允许新用户在系统中创建账户。",-1)),E[8]||(E[8]=e("h3",{id:"注册流程",tabindex:"-1"},[e("code",null,"注册流程"),a(),e("a",{class:"header-anchor",href:"#注册流程","aria-label":'Permalink to "`注册流程`"'},"​")],-1)),(i(),o(B,null,{default:A(()=>[r(t,{id:"mermaid-27",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20User%20as%20%22%E7%94%A8%E6%88%B7%22%0A%20%20%20%20participant%20RegisterComponent%20as%20%22%E6%B3%A8%E5%86%8C%E7%BB%84%E4%BB%B6%22%0A%20%20%20%20participant%20RegisterService%20as%20%22registerService%22%0A%20%20%20%20participant%20BackendAPI%20as%20%22%E5%90%8E%E7%AB%AF%20API%22%0A%0A%20%20%20%20User-%3E%3ERegisterComponent%3A%20%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E8%AF%A6%E6%83%85%0A%20%20%20%20RegisterComponent-%3E%3ERegisterComponent%3A%20%E9%AA%8C%E8%AF%81%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5%0A%20%20%20%20RegisterComponent-%3E%3ERegisterService%3A%20%E6%8F%90%E4%BA%A4%E6%B3%A8%E5%86%8C%E6%95%B0%E6%8D%AE%0A%20%20%20%20RegisterService-%3E%3EBackendAPI%3A%20POST%20%E6%B3%A8%E5%86%8C%E8%AF%B7%E6%B1%82%0A%20%20%20%20BackendAPI-%3E%3ERegisterService%3A%20%E8%BF%94%E5%9B%9E%E6%88%90%E5%8A%9F%2F%E9%94%99%E8%AF%AF%0A%20%20%20%20RegisterService-%3E%3ERegisterComponent%3A%20%E5%A4%84%E7%90%86%E5%93%8D%E5%BA%94%0A%0A%20%20%20%20alt%20%E6%B3%A8%E5%86%8C%E6%88%90%E5%8A%9F%0A%20%20%20%20%20%20%20%20RegisterComponent-%3E%3EUser%3A%20%E6%98%BE%E7%A4%BA%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%0A%20%20%20%20%20%20%20%20RegisterComponent-%3E%3EUser%3A%20%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%0A%20%20%20%20else%20%E6%B3%A8%E5%86%8C%E5%A4%B1%E8%B4%A5%0A%20%20%20%20%20%20%20%20RegisterComponent-%3E%3EUser%3A%20%E6%98%BE%E7%A4%BA%E9%94%99%E8%AF%AF%E6%B6%88%E6%81%AF%0A%20%20%20%20end%0A"})]),fallback:A(()=>E[1]||(E[1]=[a(" Loading... ")])),_:1})),E[9]||(E[9]=l('<div class="info custom-block"><p class="custom-block-title">注册表单包括以下字段：</p><ul><li>用户名（5-20 个字符，字母数字+下划线）</li><li>昵称</li><li>密码</li><li>密码确认</li></ul><p><strong>表单验证包括：</strong></p><ul><li>必填字段验证</li><li>用户名模式和长度验证</li><li>密码确认匹配</li></ul></div><h2 id="用户登录流程" tabindex="-1"><code>用户登录流程</code> <a class="header-anchor" href="#用户登录流程" aria-label="Permalink to &quot;`用户登录流程`&quot;">​</a></h2><p>登录流程对用户进行身份验证并建立会话。</p><h3 id="登录流程" tabindex="-1"><code>登录流程</code> <a class="header-anchor" href="#登录流程" aria-label="Permalink to &quot;`登录流程`&quot;">​</a></h3>',4)),(i(),o(B,null,{default:A(()=>[r(t,{id:"mermaid-81",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20User%20as%20%22%E7%94%A8%E6%88%B7%22%0A%20%20%20%20participant%20LoginComponent%20as%20%22%E7%99%BB%E5%BD%95%E7%BB%84%E4%BB%B6%22%0A%20%20%20%20participant%20LoginService%20as%20%22loginService%22%0A%20%20%20%20participant%20GetUserInfoService%20as%20%22getUserInfoService%22%0A%20%20%20%20participant%20TokenUtil%20as%20%22%E4%BB%A4%E7%89%8C%E5%B7%A5%E5%85%B7%22%0A%20%20%20%20participant%20ReduxStore%20as%20%22Redux%20Store%22%0A%20%20%20%20participant%20BackendAPI%20as%20%22%E5%90%8E%E7%AB%AF%20API%22%0A%20%20%20%20participant%20LocalStorage%20as%20%22LocalStorage%22%0A%0A%20%20%20%20User-%3E%3ELoginComponent%3A%20%E8%BE%93%E5%85%A5%E5%87%AD%E8%AF%81%0A%20%20%20%20LoginComponent-%3E%3ELoginService%3A%20%E6%8F%90%E4%BA%A4%E7%99%BB%E5%BD%95%E6%95%B0%E6%8D%AE%0A%20%20%20%20LoginService-%3E%3EBackendAPI%3A%20POST%20%E7%99%BB%E5%BD%95%E8%AF%B7%E6%B1%82%0A%20%20%20%20BackendAPI-%3E%3ELoginService%3A%20%E8%BF%94%E5%9B%9E%E4%BB%A4%E7%89%8C%0A%20%20%20%20LoginService-%3E%3ETokenUtil%3A%20%E5%AD%98%E5%82%A8%E4%BB%A4%E7%89%8C%0A%20%20%20%20LoginService-%3E%3EGetUserInfoService%3A%20%E8%AF%B7%E6%B1%82%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%0A%20%20%20%20GetUserInfoService-%3E%3EBackendAPI%3A%20GET%20%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%0A%20%20%20%20BackendAPI-%3E%3EGetUserInfoService%3A%20%E8%BF%94%E5%9B%9E%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%0A%20%20%20%20GetUserInfoService-%3E%3EReduxStore%3A%20%E5%AD%98%E5%82%A8%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%0A%20%20%20%20LoginComponent-%3E%3EUser%3A%20%E6%98%BE%E7%A4%BA%E6%88%90%E5%8A%9F%E6%B6%88%E6%81%AF%0A%20%20%20%20LoginComponent-%3E%3EUser%3A%20%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2%0A%0A%20%20%20%20alt%20%E8%AE%B0%E4%BD%8F%E6%88%91%E9%80%89%E4%B8%AD%0A%20%20%20%20%20%20%20%20LoginService-%3E%3ELocalStorage%3A%20%E5%AD%98%E5%82%A8%E5%87%AD%E8%AF%81%0A%20%20%20%20else%20%E8%AE%B0%E4%BD%8F%E6%88%91%E6%9C%AA%E9%80%89%E4%B8%AD%0A%20%20%20%20%20%20%20%20LoginService-%3E%3ELocalStorage%3A%20%E7%A7%BB%E9%99%A4%E5%87%AD%E8%AF%81%0A%20%20%20%20end%0A"})]),fallback:A(()=>E[2]||(E[2]=[a(" Loading... ")])),_:1})),E[10]||(E[10]=e("h2",{id:"令牌管理",tabindex:"-1"},[e("code",null,"令牌管理"),a(),e("a",{class:"header-anchor",href:"#令牌管理","aria-label":'Permalink to "`令牌管理`"'},"​")],-1)),E[11]||(E[11]=e("p",null,[e("code",null,"JWT "),a("令牌用于身份验证，并通过专用的实用函数进行管理。")],-1)),E[12]||(E[12]=e("h3",{id:"api-请求中的令牌流程",tabindex:"-1"},[e("code",null,"API 请求中的令牌流程"),a(),e("a",{class:"header-anchor",href:"#api-请求中的令牌流程","aria-label":'Permalink to "`API 请求中的令牌流程`"'},"​")],-1)),(i(),o(B,null,{default:A(()=>[r(t,{id:"mermaid-91",class:"mermaid",graph:"%0Agraph%20TD%0A%20%20%20%20API%E8%AF%B7%E6%B1%82%E5%8F%91%E8%B5%B7%20--%3E%20%E8%AF%B7%E6%B1%82%E6%8B%A6%E6%88%AA%E5%99%A8%0A%20%20%20%20%E8%AF%B7%E6%B1%82%E6%8B%A6%E6%88%AA%E5%99%A8%20--%3E%20%E4%BB%A4%E7%89%8C%E5%8F%AF%E7%94%A8%3F%0A%20%20%20%20%E4%BB%A4%E7%89%8C%E5%8F%AF%E7%94%A8%3F%20--%3E%7C%E6%98%AF%7C%20%E5%9C%A8%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%B8%AD%E6%B7%BB%E5%8A%A0Bearer%E4%BB%A4%E7%89%8C%0A%20%20%20%20%E4%BB%A4%E7%89%8C%E5%8F%AF%E7%94%A8%3F%20--%3E%7C%E5%90%A6%7C%20%E5%8F%91%E9%80%81%E4%B8%8D%E5%B8%A6%E4%BB%A4%E7%89%8C%E7%9A%84%E8%AF%B7%E6%B1%82%0A%20%20%20%20%E5%9C%A8%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%B8%AD%E6%B7%BB%E5%8A%A0Bearer%E4%BB%A4%E7%89%8C%20--%3E%20%E5%90%91API%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%0A%20%20%20%20%E5%8F%91%E9%80%81%E4%B8%8D%E5%B8%A6%E4%BB%A4%E7%89%8C%E7%9A%84%E8%AF%B7%E6%B1%82%20--%3E%20%E5%90%91API%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%0A%20%20%20%20%E5%90%91API%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%20--%3E%20%E5%93%8D%E5%BA%94%E6%8B%A6%E6%88%AA%E5%99%A8%0A%20%20%20%20%E5%93%8D%E5%BA%94%E6%8B%A6%E6%88%AA%E5%99%A8%20--%3E%20%E5%93%8D%E5%BA%94%E9%94%99%E8%AF%AF%3F%0A%20%20%20%20%E5%93%8D%E5%BA%94%E9%94%99%E8%AF%AF%3F%20--%3E%7C%E6%98%AF%7C%20%E6%98%BE%E7%A4%BA%E9%94%99%E8%AF%AF%E6%B6%88%E6%81%AF%0A%20%20%20%20%E5%93%8D%E5%BA%94%E9%94%99%E8%AF%AF%3F%20--%3E%7C%E5%90%A6%7C%20%E8%BF%94%E5%9B%9E%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE%0A"})]),fallback:A(()=>E[3]||(E[3]=[a(" Loading... ")])),_:1})),E[13]||(E[13]=l('<div class="tip custom-block"><p class="custom-block-title">令牌管理的关键方面：</p><ul><li>成功登录后存储令牌</li><li>通过 Axios 拦截器检索令牌并附加到所有 API 请求</li><li>令牌遵循 JWT 格式，使用 Bearer 认证方案</li></ul></div><h2 id="会话管理和-记住我-功能" tabindex="-1"><code>会话管理和&quot;记住我&quot;功能</code> <a class="header-anchor" href="#会话管理和-记住我-功能" aria-label="Permalink to &quot;`会话管理和&quot;记住我&quot;功能`&quot;">​</a></h2><p>应用程序提供了一个&quot;记住我&quot;功能，可以保存用户凭证。</p><table tabindex="0"><thead><tr><th>函数</th><th>目的</th><th>存储位置</th></tr></thead><tbody><tr><td><code>rememberUser</code></td><td>存储用户名和密码</td><td>localStorage</td></tr><tr><td><code>deleteUserFormData</code></td><td>移除存储的凭证</td><td>localStorage</td></tr><tr><td><code>getUserInfoFormData</code></td><td>检索存储的凭证</td><td>localStorage</td></tr></tbody></table><p>当在登录期间选择&quot;<code>记住我</code>&quot;复选框时，应用程序会将用户的凭证存储在 localStorage 中，当用户返回登录页面时，这些凭证会被<code>预填充</code>。</p><h2 id="使用-redux-的用户状态管理" tabindex="-1"><code>使用 Redux 的用户状态管理</code> <a class="header-anchor" href="#使用-redux-的用户状态管理" aria-label="Permalink to &quot;`使用 Redux 的用户状态管理`&quot;">​</a></h2><p>成功认证后，用户信息存储在 <code>Redux</code> 中，以便在整个应用程序中<code>全局访问</code>。</p>',7)),(i(),o(B,null,{default:A(()=>[r(t,{id:"mermaid-176",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5B%22%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%22%5D%20--%3E%20B%5B%22%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%22%5D%0A%20%20%20%20B%20--%3E%20C%5B%22dispatch(loginReducer)%22%5D%0A%20%20%20%20C%20--%3E%20D%5B%22Redux%20Store%22%5D%0A%20%20%20%20D%20--%3E%20E%5B%22%E7%94%A8%E6%88%B7%20Reducer%22%5D%0A%20%20%20%20E%20--%3E%20F%5B%22%E7%94%A8%E6%88%B7%E7%8A%B6%E6%80%81%22%5D%0A%20%20%20%20F%20--%3E%20G%5B%22%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%22%5D%0A"})]),fallback:A(()=>E[4]||(E[4]=[a(" Loading... ")])),_:1})),E[14]||(E[14]=l('<p>应用程序在成功登录后使用用户信息（用户名和昵称）分发 <code>loginReducer</code> 操作，通过 Redux 使用户数据在整个应用程序中可用。</p><h2 id="api-认证集成" tabindex="-1"><code>API 认证集成</code> <a class="header-anchor" href="#api-认证集成" aria-label="Permalink to &quot;`API 认证集成`&quot;">​</a></h2><p>应用程序使用 <code>Axios 拦截器</code>来处理 API 请求中的认证令牌。</p><h3 id="请求拦截器" tabindex="-1"><code>请求拦截器</code> <a class="header-anchor" href="#请求拦截器" aria-label="Permalink to &quot;`请求拦截器`&quot;">​</a></h3><p>请求拦截器自动将 JWT 令牌附加到所有传出请求：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Authorization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Bearer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="响应拦截器" tabindex="-1"><code>响应拦截器</code> <a class="header-anchor" href="#响应拦截器" aria-label="Permalink to &quot;`响应拦截器`&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">响应拦截器处理 API 响应并处理错误情况：</p><ul><li>检查错误代码（非零 <code>errno</code>）</li><li>使用 Ant-Design 的消息组件显示错误消息</li><li>为失败的请求抛出错误</li></ul></div><h2 id="认证表单实现" tabindex="-1"><code>认证表单实现</code> <a class="header-anchor" href="#认证表单实现" aria-label="Permalink to &quot;`认证表单实现`&quot;">​</a></h2><p>登录和注册表单都使用 Ant-Design 的表单组件实现，并带有验证规则。</p><h3 id="登录表单功能" tabindex="-1"><code>登录表单功能：</code> <a class="header-anchor" href="#登录表单功能" aria-label="Permalink to &quot;`登录表单功能：`&quot;">​</a></h3><ul><li>带有验证的用户名和密码字段</li><li>&quot;记住我&quot;复选框</li><li>登录按钮和注册链接</li><li>使用记住的凭证初始化表单（如果可用）</li></ul><h3 id="注册表单功能" tabindex="-1"><code>注册表单功能：</code> <a class="header-anchor" href="#注册表单功能" aria-label="Permalink to &quot;`注册表单功能：`&quot;">​</a></h3><ul><li>带有模式验证的用户名字段</li><li>昵称字段</li><li>密码字段</li><li>带有依赖验证的确认密码字段</li><li>注册按钮和登录链接</li></ul>',14))])}const k=d(c,[["render",p]]);export{C as __pageData,k as default};
