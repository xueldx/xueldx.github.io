import{_ as A,C as B,c,o as t,a8 as r,b as l,w as a,a as E,G as d,a9 as i}from"./chunks/framework.DW4T_yAZ.js";const m=JSON.parse('{"title":"回收站","description":"","frontmatter":{},"headers":[],"relativePath":"projects/LitePan/4-user-features/4.3-recycle-bin.md","filePath":"projects/LitePan/4-user-features/4.3-recycle-bin.md","lastUpdated":1749448992000}'),s={name:"projects/LitePan/4-user-features/4.3-recycle-bin.md"};function n(D,e,b,h,C,u){const o=B("Mermaid");return t(),c("div",null,[e[4]||(e[4]=r('<h1 id="回收站" tabindex="-1">回收站 <a class="header-anchor" href="#回收站" aria-label="Permalink to &quot;回收站&quot;">​</a></h1><blockquote><p><strong>相关源文件</strong></p><ul><li><a href="https://github.com/xueldx/%E4%BC%98%E4%BA%AB%E4%BA%91%E7%9B%98-front/blob/3ffecfa5/src/views/admin/UserList.vue" target="_blank" rel="noreferrer">src/views/admin/UserList.vue</a></li><li><a href="https://github.com/xueldx/%E4%BC%98%E4%BA%AB%E4%BA%91%E7%9B%98-front/blob/3ffecfa5/src/views/recycle/Recycle.vue" target="_blank" rel="noreferrer">src/views/recycle/Recycle.vue</a></li></ul></blockquote><p>回收站系统为用户提供了一种文件恢复的安全机制，它会在永久删除文件之前临时存储这些已删除的文件。该系统允许用户恢复误删除的文件，或者将文件从系统中永久移除。</p><h2 id="组件概述" tabindex="-1">组件概述 <a class="header-anchor" href="#组件概述" aria-label="Permalink to &quot;组件概述&quot;">​</a></h2><p>回收站以单个 Vue 组件的形式实现，该组件提供了一个表格界面来管理已删除的文件。此组件支持对文件进行单个和批量的恢复与永久删除操作。</p>',5)),(t(),l(i,null,{default:a(()=>[d(o,{id:"mermaid-29",class:"mermaid",graph:"flowchart%20TD%0A%0ARecycleView%5B%22Recycle.vue%3Cbr%3E%E4%B8%BB%E7%BB%84%E4%BB%B6%22%5D%0ATableComponent%5B%22%E8%A1%A8%E6%A0%BC%E7%BB%84%E4%BB%B6%3Cbr%3E%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8%E5%B1%95%E7%A4%BA%22%5D%0ARestoreActions%5B%22%E6%81%A2%E5%A4%8D%E6%93%8D%E4%BD%9C%3Cbr%3Erevert()%2C%20revertBatch()%22%5D%0ADeleteActions%5B%22%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%3Cbr%3EdelFile()%2C%20delBatch()%22%5D%0AFileItem%5B%22%E6%96%87%E4%BB%B6%E9%A1%B9%E5%B1%95%E7%A4%BA%3Cbr%3EfileName%20%E6%A8%A1%E6%9D%BF%22%5D%0AIconComponent%5B%22%E5%9B%BE%E6%A0%87%E7%BB%84%E4%BB%B6%3Cbr%3E%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E5%9B%BE%E6%A0%87%22%5D%0AOperationMenu%5B%22%E6%93%8D%E4%BD%9C%E8%8F%9C%E5%8D%95%3Cbr%3EshowOp%2FcancelShowOp%22%5D%0ARecoverAPI%5B%22%2Frecycle%2FrecoverFile%3Cbr%3E%E6%81%A2%E5%A4%8D%20API%22%5D%0ADeleteAPI%5B%22%2Frecycle%2FdelFile%3Cbr%3E%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%20API%22%5D%0ALoadAPI%5B%22%2Frecycle%2FloadRecycleList%3Cbr%3E%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%20API%22%5D%0A%0A%20%20%20%20RecycleView%20--%3E%20TableComponent%0A%20%20%20%20RecycleView%20--%3E%20RestoreActions%0A%20%20%20%20RecycleView%20--%3E%20DeleteActions%0A%20%20%20%20TableComponent%20--%3E%20FileItem%0A%20%20%20%20FileItem%20--%3E%20IconComponent%0A%20%20%20%20FileItem%20--%3E%20OperationMenu%0A%20%20%20%20RestoreActions%20--%3E%20RecoverAPI%0A%20%20%20%20DeleteActions%20--%3E%20DeleteAPI%0A%20%20%20%20RecycleView%20--%3E%20LoadAPI%0A"})]),fallback:a(()=>e[0]||(e[0]=[E(" Loading... ")])),_:1})),e[5]||(e[5]=r('<h2 id="api-端点" tabindex="-1">API 端点 <a class="header-anchor" href="#api-端点" aria-label="Permalink to &quot;API 端点&quot;">​</a></h2><p>回收站系统与三个后端端点进行交互，以管理已删除的文件：</p><table tabindex="0"><thead><tr><th>端点</th><th>用途</th><th>参数</th></tr></thead><tbody><tr><td><code>/recycle/loadRecycleList</code></td><td>加载已删除的文件列表</td><td><code>pageNo</code>（页码）, <code>pageSize</code>（每页数量）</td></tr><tr><td><code>/recycle/recoverFile</code></td><td>从回收站恢复文件</td><td><code>fileIds</code>（逗号分隔）</td></tr><tr><td><code>/recycle/delFile</code></td><td>永久删除文件</td><td><code>fileIds</code>（逗号分隔）</td></tr></tbody></table><h2 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h2><h3 id="文件列表展示" tabindex="-1">文件列表展示 <a class="header-anchor" href="#文件列表展示" aria-label="Permalink to &quot;文件列表展示&quot;">​</a></h3><p>回收站以表格形式展示已删除的文件，主要有三列：</p>',6)),(t(),l(i,null,{default:a(()=>[d(o,{id:"mermaid-95",class:"mermaid",graph:"flowchart%20TD%0A%0ATableData%5B%22tableData%3Cbr%3E%E6%95%B0%E6%8D%AE%E6%BA%90%22%5D%0AFileNameCol%5B%22%E6%96%87%E4%BB%B6%E5%90%8D%E5%88%97%3Cbr%3E%E6%96%87%E4%BB%B6%E5%9B%BE%E6%A0%87%20%2B%20%E5%90%8D%E7%A7%B0%20%2B%20%E6%93%8D%E4%BD%9C%22%5D%0ARecoveryTimeCol%5B%22%E5%9B%9E%E6%94%B6%E6%97%B6%E9%97%B4%E5%88%97%3Cbr%3E%E5%88%A0%E9%99%A4%E6%97%B6%E9%97%B4%E6%88%B3%22%5D%0AFileSizeCol%5B%22%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E5%88%97%3Cbr%3E%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E5%B1%95%E7%A4%BA%22%5D%0AIconDisplay%5B%22%E5%9B%BE%E6%A0%87%E7%BB%84%E4%BB%B6%3Cbr%3E%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E5%8F%AF%E8%A7%86%E5%8C%96%22%5D%0AOperationButtons%5B%22%E6%93%8D%E4%BD%9C%E6%8C%89%E9%92%AE%3Cbr%3E%E6%81%A2%E5%A4%8D%2F%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%22%5D%0A%0A%20%20%20%20TableData%20--%3E%20FileNameCol%0A%20%20%20%20TableData%20--%3E%20RecoveryTimeCol%0A%20%20%20%20TableData%20--%3E%20FileSizeCol%0A%20%20%20%20FileNameCol%20--%3E%20IconDisplay%0A%20%20%20%20FileNameCol%20--%3E%20OperationButtons%0A"})]),fallback:a(()=>e[1]||(e[1]=[E(" Loading... ")])),_:1})),e[6]||(e[6]=r('<p>表格配置定义了特定的列属性和作用域插槽，用于自定义渲染。</p><h3 id="文件操作" tabindex="-1">文件操作 <a class="header-anchor" href="#文件操作" aria-label="Permalink to &quot;文件操作&quot;">​</a></h3><h4 id="单个文件操作" tabindex="-1">单个文件操作 <a class="header-anchor" href="#单个文件操作" aria-label="Permalink to &quot;单个文件操作&quot;">​</a></h4><p>每一行文件都提供了鼠标悬停激活的操作按钮，用于恢复和删除操作：</p><ul><li><strong>恢复</strong>：由 <code>revert(row)</code> 函数触发，调用单个文件的恢复 API。</li><li><strong>删除</strong>：由 <code>delFile(row)</code> 函数触发，永久移除该文件。</li></ul><h4 id="批量操作" tabindex="-1">批量操作 <a class="header-anchor" href="#批量操作" aria-label="Permalink to &quot;批量操作&quot;">​</a></h4><p>该组件支持通过文件选择进行批量操作：</p><ul><li><strong>批量恢复</strong>：<code>revertBatch()</code> 函数恢复所有选中的文件。</li><li><strong>批量删除</strong>：<code>delBatch()</code> 函数永久删除所有选中的文件。</li></ul><p>当没有选中文件时，这两个批量操作将被禁用，这由 <code>selectFileIdList</code> 数组控制。</p><h3 id="数据加载与分页" tabindex="-1">数据加载与分页 <a class="header-anchor" href="#数据加载与分页" aria-label="Permalink to &quot;数据加载与分页&quot;">​</a></h3><p>该组件使用了支持分页的可复用 <code>Table</code> 组件。数据加载由 <code>loadDataList</code> 函数处理：</p>',11)),(t(),l(i,null,{default:a(()=>[d(o,{id:"mermaid-147",class:"mermaid",graph:"flowchart%20TD%0A%0ALoadTrigger%5B%22%E5%8A%A0%E8%BD%BD%E8%A7%A6%E5%8F%91%3Cbr%3E%E7%BB%84%E4%BB%B6%E6%8C%82%E8%BD%BD%2F%E5%88%B7%E6%96%B0%22%5D%0ALoadDataList%5B%22loadDataList()%3Cbr%3E%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96%E5%87%BD%E6%95%B0%22%5D%0AAPIRequest%5B%22proxy.Request%3Cbr%3EHTTP%20%E8%AF%B7%E6%B1%82%22%5D%0ARecycleAPI%5B%22%2Frecycle%2FloadRecycleList%3Cbr%3E%E5%90%8E%E7%AB%AF%E7%AB%AF%E7%82%B9%22%5D%0ATableData%5B%22tableData.value%3Cbr%3E%E7%BB%84%E4%BB%B6%E7%8A%B6%E6%80%81%22%5D%0ATableRender%5B%22%E8%A1%A8%E6%A0%BC%E7%BB%84%E4%BB%B6%3Cbr%3EUI%20%E6%B8%B2%E6%9F%93%22%5D%0A%0A%20%20%20%20LoadTrigger%20--%3E%20LoadDataList%0A%20%20%20%20LoadDataList%20--%3E%20APIRequest%0A%20%20%20%20APIRequest%20--%3E%20RecycleAPI%0A%20%20%20%20RecycleAPI%20--%3E%20TableData%0A%20%20%20%20TableData%20--%3E%20TableRender%0A"})]),fallback:a(()=>e[2]||(e[2]=[E(" Loading... ")])),_:1})),e[7]||(e[7]=r('<h2 id="用户界面特性" tabindex="-1">用户界面特性 <a class="header-anchor" href="#用户界面特性" aria-label="Permalink to &quot;用户界面特性&quot;">​</a></h2><h3 id="文件选择与行交互" tabindex="-1">文件选择与行交互 <a class="header-anchor" href="#文件选择与行交互" aria-label="Permalink to &quot;文件选择与行交互&quot;">​</a></h3><p>该组件通过复选框实现文件选择，并为用户交互提供视觉反馈：</p><ul><li><strong>行选择</strong>：使用 <code>rowSelected</code> 回调函数来跟踪选中的文件。</li><li><strong>列标签更新</strong>：更新文件名列的标签，以显示选择的文件数量。</li><li><strong>悬停效果</strong>：鼠标悬停在文件行上时显示操作按钮。</li></ul><h3 id="确认对话框" tabindex="-1">确认对话框 <a class="header-anchor" href="#确认对话框" aria-label="Permalink to &quot;确认对话框&quot;">​</a></h3><p>所有具有破坏性的操作（恢复和删除）都需要通过确认对话框获得用户确认：</p>',6)),(t(),l(i,null,{default:a(()=>[d(o,{id:"mermaid-180",class:"mermaid",graph:"flowchart%20TD%0A%0AUserAction%5B%22%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C%3Cbr%3E%E6%81%A2%E5%A4%8D%2F%E5%88%A0%E9%99%A4%22%5D%0AConfirmDialog%5B%22proxy.Confirm%3Cbr%3E%E7%A1%AE%E8%AE%A4%E5%AF%B9%E8%AF%9D%E6%A1%86%22%5D%0AUserConfirms%5B%22%E7%94%A8%E6%88%B7%E7%A1%AE%E8%AE%A4%EF%BC%9F%22%5D%0AAPICall%5B%22API%20%E8%AF%B7%E6%B1%82%3Cbr%3E%E5%90%8E%E7%AB%AF%E6%93%8D%E4%BD%9C%22%5D%0ACancelAction%5B%22%E5%8F%96%E6%B6%88%E6%93%8D%E4%BD%9C%22%5D%0ASuccessMessage%5B%22proxy.Message.success%3Cbr%3E%E6%88%90%E5%8A%9F%E5%8F%8D%E9%A6%88%22%5D%0ARefreshData%5B%22loadDataList()%3Cbr%3E%E5%88%B7%E6%96%B0%E8%A7%86%E5%9B%BE%22%5D%0A%0A%20%20%20%20UserAction%20--%3E%20ConfirmDialog%0A%20%20%20%20ConfirmDialog%20--%3E%20UserConfirms%0A%20%20%20%20UserConfirms%20--%3E%7C%E6%98%AF%7C%20APICall%0A%20%20%20%20UserConfirms%20--%3E%7C%E5%90%A6%7C%20CancelAction%0A%20%20%20%20APICall%20--%3E%20SuccessMessage%0A%20%20%20%20APICall%20--%3E%20RefreshData%0A"})]),fallback:a(()=>e[3]||(e[3]=[E(" Loading... ")])),_:1})),e[8]||(e[8]=r('<h3 id="文件类型可视化" tabindex="-1">文件类型可视化 <a class="header-anchor" href="#文件类型可视化" aria-label="Permalink to &quot;文件类型可视化&quot;">​</a></h3><p>回收站复用了与主文件浏览器相同的文件可视化逻辑，支持：</p><ul><li><strong>文件类型图标</strong>：根据文件类型显示不同的图标。</li><li><strong>封面图片</strong>：为图片和视频提供缩略图预览（如果可用）。</li><li><strong>文件夹图标</strong>：对目录项进行特殊处理。</li></ul><h2 id="状态管理" tabindex="-1">状态管理 <a class="header-anchor" href="#状态管理" aria-label="Permalink to &quot;状态管理&quot;">​</a></h2><p>该组件维护了几个响应式状态变量：</p><table tabindex="0"><thead><tr><th>变量</th><th>类型</th><th>用途</th></tr></thead><tbody><tr><td><code>tableData</code></td><td><code>ref({})</code></td><td>存储分页后的文件列表数据</td></tr><tr><td><code>selectFileIdList</code></td><td><code>ref([])</code></td><td>跟踪选中的文件 ID，用于批量操作</td></tr><tr><td><code>revertIdList</code></td><td><code>ref([])</code></td><td>临时存储正在恢复的文件</td></tr><tr><td><code>delIdList</code></td><td><code>ref([])</code></td><td>临时存储正在删除的文件</td></tr></tbody></table><h2 id="与主应用程序的集成" tabindex="-1">与主应用程序的集成 <a class="header-anchor" href="#与主应用程序的集成" aria-label="Permalink to &quot;与主应用程序的集成&quot;">​</a></h2><p>回收站组件通过以下方式与主应用程序框架集成：</p><ul><li><strong>路由</strong>：可通过应用程序的路由系统访问。</li><li><strong>共享组件</strong>：使用通用的 <code>Table</code>、<code>Icon</code> 等可复用组件。</li><li><strong>工具函数</strong>：利用 <code>proxy.Utils.size2Str</code> 进行文件大小格式化。</li><li><strong>事件发射</strong>：发射 <code>reload</code> 事件以触发父组件更新。</li></ul>',9))])}const f=A(s,[["render",n]]);export{m as __pageData,f as default};
