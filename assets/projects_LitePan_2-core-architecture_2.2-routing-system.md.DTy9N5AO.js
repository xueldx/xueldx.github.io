import{_ as i,C as l,c as s,o as t,a8 as A,b as E,w as a,a as r,G as d,a9 as B}from"./chunks/framework.DW4T_yAZ.js";const b=JSON.parse('{"title":"路由系统","description":"","frontmatter":{},"headers":[],"relativePath":"projects/LitePan/2-core-architecture/2.2-routing-system.md","filePath":"projects/LitePan/2-core-architecture/2.2-routing-system.md","lastUpdated":1749448992000}'),c={name:"projects/LitePan/2-core-architecture/2.2-routing-system.md"};function n(h,e,u,D,p,F){const o=l("Mermaid");return t(),s("div",null,[e[4]||(e[4]=A('<h1 id="路由系统" tabindex="-1">路由系统 <a class="header-anchor" href="#路由系统" aria-label="Permalink to &quot;路由系统&quot;">​</a></h1><p>本节涵盖了 优享云盘 云存储应用程序中使用的 Vue Router 配置和导航模式。路由系统负责管理认证流程、嵌套路由层次结构以及不同用户场景下的访问控制。</p><h2 id="目的和架构" tabindex="-1">目的和架构 <a class="header-anchor" href="#目的和架构" aria-label="Permalink to &quot;目的和架构&quot;">​</a></h2><p>路由系统基于 Vue Router 4 构建，是整个应用程序的导航核心。它实现了带有认证守卫的分层路由结构，支持三种不同的用户场景：已认证用户、管理员和公共共享访问。</p><p>路由器配置使用 HTML5 <code>history</code> 模式，并对所有路由组件实现懒加载，以优化应用程序性能。</p><h3 id="路由架构概述" tabindex="-1">路由架构概述 <a class="header-anchor" href="#路由架构概述" aria-label="Permalink to &quot;路由架构概述&quot;">​</a></h3>',6)),(t(),E(B,null,{default:a(()=>[d(o,{id:"mermaid-18",class:"mermaid",graph:"flowchart%20TD%0A%0AA%5B%22%E8%B7%AF%E7%94%B1%E5%99%A8%22%5D%0AB%5B%22createRouter()%22%5D%0AC%5B%22createWebHistory()%22%5D%0AD%5B%22%E8%B7%AF%E7%94%B1%22%5D%0AE%5B%22beforeEach()%20%E8%B7%AF%E7%94%B1%E5%AE%88%E5%8D%AB%22%5D%0AF%5B%22%2Flogin%22%5D%0AG%5B%22Login.vue%22%5D%0AH%5B%22%2F%22%5D%0AI%5B%22Framework.vue%22%5D%0AJ%5B%22%2FshareCheck%2F%3AshareId%22%5D%0AK%5B%22ShareCheck.vue%22%5D%0AL%5B%22%2Fshare%2F%3AshareId%22%5D%0AM%5B%22Share.vue%22%5D%0AN%5B%22%2F%3ApathMatch(.*)*%22%5D%0AO%5B%22NotFound.vue%22%5D%0AP%5B%22%2Fmain%2F%3Acategory%22%5D%0AQ%5B%22%2Fmyshare%22%5D%0AR%5B%22%2Frecycle%22%5D%0AS%5B%22%2Fsettings%2F*%22%5D%0AT%5B%22Main.vue%22%5D%0AU%5B%22Share.vue%22%5D%0AV%5B%22Recycle.vue%22%5D%0AW%5B%22%E7%AE%A1%E7%90%86%E7%BB%84%E4%BB%B6%22%5D%0A%0A%20%20%20%20I%20--%3E%20P%0A%20%20%20%20I%20--%3E%20Q%0A%20%20%20%20I%20--%3E%20R%0A%20%20%20%20I%20--%3E%20S%0A%20%20%20%20D%20--%3E%20F%0A%20%20%20%20D%20--%3E%20H%0A%20%20%20%20D%20--%3E%20J%0A%20%20%20%20D%20--%3E%20L%0A%20%20%20%20D%20--%3E%20N%0Asubgraph%20Framework%E4%B8%8B%E7%9A%84%E5%B5%8C%E5%A5%97%E8%B7%AF%E7%94%B1%20%5B%22Framework%E4%B8%8B%E7%9A%84%E5%B5%8C%E5%A5%97%E8%B7%AF%E7%94%B1%22%5D%0A%20%20%20%20P%0A%20%20%20%20Q%0A%20%20%20%20R%0A%20%20%20%20S%0A%20%20%20%20T%0A%20%20%20%20U%0A%20%20%20%20V%0A%20%20%20%20W%0A%20%20%20%20P%20--%3E%20T%0A%20%20%20%20Q%20--%3E%20U%0A%20%20%20%20R%20--%3E%20V%0A%20%20%20%20S%20--%3E%20W%0Aend%0A%0Asubgraph%20%E8%B7%AF%E7%94%B1%E7%B1%BB%E5%88%AB%20%5B%22%E8%B7%AF%E7%94%B1%E7%B1%BB%E5%88%AB%22%5D%0A%20%20%20%20F%0A%20%20%20%20G%0A%20%20%20%20H%0A%20%20%20%20I%0A%20%20%20%20J%0A%20%20%20%20K%0A%20%20%20%20L%0A%20%20%20%20M%0A%20%20%20%20N%0A%20%20%20%20O%0A%20%20%20%20F%20--%3E%20G%0A%20%20%20%20H%20--%3E%20I%0A%20%20%20%20J%20--%3E%20K%0A%20%20%20%20L%20--%3E%20M%0A%20%20%20%20N%20--%3E%20O%0Aend%0A%0Asubgraph%20%E8%B7%AF%E7%94%B1%E5%99%A8%E9%85%8D%E7%BD%AE%20%5B%22%E8%B7%AF%E7%94%B1%E5%99%A8%E9%85%8D%E7%BD%AE%22%5D%0A%20%20%20%20A%0A%20%20%20%20B%0A%20%20%20%20C%0A%20%20%20%20D%0A%20%20%20%20E%0A%20%20%20%20A%20--%3E%20B%0A%20%20%20%20B%20--%3E%20C%0A%20%20%20%20B%20--%3E%20D%0A%20%20%20%20B%20--%3E%20E%0Aend%0A"})]),fallback:a(()=>e[0]||(e[0]=[r(" Loading... ")])),_:1})),e[5]||(e[5]=A('<h2 id="路由配置" tabindex="-1">路由配置 <a class="header-anchor" href="#路由配置" aria-label="Permalink to &quot;路由配置&quot;">​</a></h2><h3 id="主要路由结构" tabindex="-1">主要路由结构 <a class="header-anchor" href="#主要路由结构" aria-label="Permalink to &quot;主要路由结构&quot;">​</a></h3><p>路由器配置了五种主要路由模式，每种模式服务于不同的应用场景：</p><table tabindex="0"><thead><tr><th>路由模式</th><th>组件</th><th>用途</th><th>认证要求</th></tr></thead><tbody><tr><td><code>/login</code></td><td><code>Login.vue</code></td><td>用户认证</td><td>不需要</td></tr><tr><td><code>/</code></td><td><code>Framework.vue</code></td><td>主应用程序外壳</td><td>子路由需要</td></tr><tr><td><code>/shareCheck/:shareId</code></td><td><code>ShareCheck.vue</code></td><td>共享验证</td><td>不需要</td></tr><tr><td><code>/share/:shareId</code></td><td><code>Share.vue</code></td><td>公共文件共享</td><td>不需要</td></tr><tr><td><code>/:pathMatch(.*)*</code></td><td><code>NotFound.vue</code></td><td>404 错误处理</td><td>不需要</td></tr></tbody></table><p>Framework 路由作为所有已认证用户功能的父容器，为不同的应用程序部分实现了嵌套路由结构。</p><h3 id="路由元属性" tabindex="-1">路由元属性 <a class="header-anchor" href="#路由元属性" aria-label="Permalink to &quot;路由元属性&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">每个已认证路由都包含控制访问和导航行为的元数据：</p><ul><li><strong><code>needLogin</code></strong>：布尔标志，要求用户进行认证</li><li><strong><code>menuCode</code></strong>：字符串标识符，用于菜单高亮显示和导航上下文</li></ul><p><code>menuCode</code> 值映射到不同的应用程序部分：</p><ul><li><code>&quot;main&quot;</code> - 文件管理界面</li><li><code>&quot;share&quot;</code> - 用户共享功能</li><li><code>&quot;recycle&quot;</code> - 已删除文件恢复</li><li><code>&quot;settings&quot;</code> - 管理功能</li></ul></div><h2 id="认证守卫系统" tabindex="-1">认证守卫系统 <a class="header-anchor" href="#认证守卫系统" aria-label="Permalink to &quot;认证守卫系统&quot;">​</a></h2><h3 id="路由守卫实现" tabindex="-1">路由守卫实现 <a class="header-anchor" href="#路由守卫实现" aria-label="Permalink to &quot;路由守卫实现&quot;">​</a></h3><p>路由器实现了一个全局的 <code>beforeEach</code> 导航守卫，用于强制执行认证要求：</p>',10)),(t(),E(B,null,{default:a(()=>[d(o,{id:"mermaid-172",class:"mermaid",graph:"flowchart%20TD%0A%0AA%5B%22%E5%AF%BC%E8%88%AA%E8%AF%B7%E6%B1%82%22%5D%0AB%5B%22beforeEach()%20%E5%AE%88%E5%8D%AB%22%5D%0AC%5B%22%E6%A3%80%E6%9F%A5%20to.meta.needLogin%22%5D%0AD%5B%22%E6%A3%80%E6%9F%A5%20userInfo%20Cookie%22%5D%0AE%5B%22%E5%85%81%E8%AE%B8%E5%AF%BC%E8%88%AA%22%5D%0AF%5B%22%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%20%2Flogin%22%5D%0AG%5B%22%E8%B0%83%E7%94%A8%20next()%22%5D%0AH%5B%22router.push('%2Flogin')%22%5D%0A%0A%20%20%20%20A%20--%3E%20B%0A%20%20%20%20B%20--%3E%20C%0A%20%20%20%20C%20--%3E%7Ctrue%7C%20D%0A%20%20%20%20C%20--%3E%20E%0A%20%20%20%20D%20--%3E%7C%E5%AD%98%E5%9C%A8%7C%20E%0A%20%20%20%20D%20--%3E%7C%E4%B8%BA%E7%A9%BA%7C%20F%0A%20%20%20%20E%20--%3E%20G%0A%20%20%20%20F%20--%3E%20H%0A"})]),fallback:a(()=>e[1]||(e[1]=[r(" Loading... ")])),_:1})),e[6]||(e[6]=A('<p>认证检查使用 <code>VueCookies.get(&quot;userInfo&quot;)</code> 来验证用户会话是否存在。元属性中包含 <code>needLogin: true</code> 的路由受到保护，未认证的用户将被重定向到登录页面。</p><h3 id="认证流程" tabindex="-1">认证流程 <a class="header-anchor" href="#认证流程" aria-label="Permalink to &quot;认证流程&quot;">​</a></h3><p>认证系统遵循以下模式：</p><ol><li>用户尝试访问受保护的路由</li><li>守卫检查 <code>needLogin</code> 元属性</li><li>守卫验证 <code>userInfo</code> cookie 是否存在</li><li>如果已认证：允许导航</li><li>如果未认证：重定向到 <code>/login</code></li></ol><p>这种方法确保了文件管理、共享和管理功能等敏感区域的安全性，同时允许公共访问共享文件和登录页面。</p><h2 id="路由类别和访问控制" tabindex="-1">路由类别和访问控制 <a class="header-anchor" href="#路由类别和访问控制" aria-label="Permalink to &quot;路由类别和访问控制&quot;">​</a></h2><h3 id="公共路由" tabindex="-1">公共路由 <a class="header-anchor" href="#公共路由" aria-label="Permalink to &quot;公共路由&quot;">​</a></h3><p>无需认证即可访问的路由：</p><ul><li><strong><code>/login</code></strong> - 用户认证界面</li><li><strong><code>/shareCheck/:shareId</code></strong> - 共享访问验证（可选密码）</li><li><strong><code>/share/:shareId</code></strong> - 公共文件共享界面</li><li><strong><code>/:pathMatch(.*)*</code></strong> - 无效 URL 的 404 错误页面</li></ul><p>这些路由支持公共共享功能和用户注册，无需登录凭证。</p><h3 id="已认证用户路由" tabindex="-1">已认证用户路由 <a class="header-anchor" href="#已认证用户路由" aria-label="Permalink to &quot;已认证用户路由&quot;">​</a></h3><p>需要有效用户会话的受保护路由：</p>',12)),(t(),E(B,null,{default:a(()=>[d(o,{id:"mermaid-252",class:"mermaid",graph:"flowchart%20TD%0A%0AM%5B%22%3Acategory%22%5D%0AN%5B%22all%20%7C%20video%20%7C%20music%20%7C%20image%20%7C%20doc%20%7C%20others%22%5D%0AO%5B%22%3AshareId%22%5D%0AP%5B%22%E5%94%AF%E4%B8%80%E5%85%B1%E4%BA%AB%E6%A0%87%E8%AF%86%E7%AC%A6%22%5D%0AG%5B%22%2Fsettings%2FsysSetting%22%5D%0AH%5B%22%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%3Cbr%3E%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE%22%5D%0AI%5B%22%2Fsettings%2FuserList%22%5D%0AJ%5B%22%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%3Cbr%3E%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86%22%5D%0AK%5B%22%2Fsettings%2FfileList%22%5D%0AL%5B%22%E6%96%87%E4%BB%B6%E7%9B%91%E7%9D%A3%3Cbr%3E%E6%89%80%E6%9C%89%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%22%5D%0AA%5B%22%2Fmain%2F%3Acategory%22%5D%0AB%5B%22%E6%96%87%E4%BB%B6%E6%B5%8F%E8%A7%88%E5%99%A8%3Cbr%3E%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%93%8D%E4%BD%9C%22%5D%0AC%5B%22%2Fmyshare%22%5D%0AD%5B%22%E5%85%B1%E4%BA%AB%E7%AE%A1%E7%90%86%3Cbr%3E%E7%94%A8%E6%88%B7%E7%9A%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%22%5D%0AE%5B%22%2Frecycle%22%5D%0AF%5B%22%E5%9B%9E%E6%94%B6%E7%AB%99%3Cbr%3E%E5%B7%B2%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%22%5D%0Asubgraph%20%E8%B7%AF%E7%94%B1%E5%8F%82%E6%95%B0%20%5B%22%E8%B7%AF%E7%94%B1%E5%8F%82%E6%95%B0%22%5D%0A%20%20%20%20M%0A%20%20%20%20N%0A%20%20%20%20O%0A%20%20%20%20P%0A%20%20%20%20G%0A%20%20%20%20H%0A%20%20%20%20I%0A%20%20%20%20J%0A%20%20%20%20A%0A%20%20%20%20B%0A%20%20%20%20C%0A%20%20%20%20D%0A%20%20%20%20M%20--%3E%20N%0A%20%20%20%20O%20--%3E%20P%0A%20%20%20%20G%20--%3E%20H%0A%20%20%20%20I%20--%3E%20J%0A%20%20%20%20A%20--%3E%20B%0A%20%20%20%20C%20--%3E%20D%0Aend%0A%0Asubgraph%20%E7%AE%A1%E7%90%86%E4%B8%8A%E4%B8%8B%E6%96%87%E8%B7%AF%E7%94%B1%20%5B%22%E7%AE%A1%E7%90%86%E4%B8%8A%E4%B8%8B%E6%96%87%E8%B7%AF%E7%94%B1%22%5D%0A%20%20%20%20K%0A%20%20%20%20L%0A%20%20%20%20E%0A%20%20%20%20F%0A%20%20%20%20K%20--%3E%20L%0A%20%20%20%20E%20--%3E%20F%0Aend%0A%0Asubgraph%20%E7%94%A8%E6%88%B7%E4%B8%8A%E4%B8%8B%E6%96%87%E8%B7%AF%E7%94%B1%20%5B%22%E7%94%A8%E6%88%B7%E4%B8%8A%E4%B8%8B%E6%96%87%E8%B7%AF%E7%94%B1%22%5D%0Aend%0A"})]),fallback:a(()=>e[2]||(e[2]=[r(" Loading... ")])),_:1})),e[7]||(e[7]=A('<p><code>/main/:category</code> 中的 <code>category</code> 参数允许按文件类型过滤文件，而管理路由提供系统范围的管理功能。</p><h2 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-label="Permalink to &quot;错误处理&quot;">​</a></h2><h3 id="_404-页面实现" tabindex="-1">404 页面实现 <a class="header-anchor" href="#_404-页面实现" aria-label="Permalink to &quot;404 页面实现&quot;">​</a></h3><p>路由器使用 Vue Router 4 的 <code>pathMatch</code> 语法包含一个通配路由，用于处理无效 URL：</p>',4)),(t(),E(B,null,{default:a(()=>[d(o,{id:"mermaid-265",class:"mermaid",graph:"flowchart%20TD%0A%0AA%5B%22%E6%97%A0%E6%95%88URL%22%5D%0AB%5B%22%2F%3ApathMatch(.*)*%22%5D%0AC%5B%22NotFound.vue%22%5D%0AD%5B%22%E6%98%BE%E7%A4%BA404%E6%B6%88%E6%81%AF%22%5D%0AE%5B%22%E6%8F%90%E4%BE%9B%E8%BF%94%E5%9B%9E%E4%B8%BB%E9%A1%B5%22%5D%0AF%5B%22router.push('%2F')%22%5D%0A%0A%20%20%20%20A%20--%3E%20B%0A%20%20%20%20B%20--%3E%20C%0A%20%20%20%20C%20--%3E%20D%0A%20%20%20%20C%20--%3E%20E%0A%20%20%20%20E%20--%3E%20F%0A"})]),fallback:a(()=>e[3]||(e[3]=[r(" Loading... ")])),_:1})),e[8]||(e[8]=A('<p><code>NotFound.vue</code> 组件提供了一个用户友好的错误页面，带有返回主应用程序的导航。</p><h3 id="错误页面功能" tabindex="-1">错误页面功能 <a class="header-anchor" href="#错误页面功能" aria-label="Permalink to &quot;错误页面功能&quot;">​</a></h3><p>404 页面包括：</p><ul><li>使用图标字体显示错误图标</li><li>本地化错误消息（“404 - 页面未找到”）</li><li>用户友好的描述</li><li>带有路由导航的返回主页按钮</li><li>居中布局，样式一致</li></ul><h2 id="路由器配置细节" tabindex="-1">路由器配置细节 <a class="header-anchor" href="#路由器配置细节" aria-label="Permalink to &quot;路由器配置细节&quot;">​</a></h2><h3 id="历史模式设置" tabindex="-1">历史模式设置 <a class="header-anchor" href="#历史模式设置" aria-label="Permalink to &quot;历史模式设置&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">路由器使用 HTML5 历史模式，基本 URL 来自环境配置：</p><ul><li><strong>历史模式</strong>：<code>createWebHistory(import.meta.env.BASE_URL)</code></li><li><strong>懒加载</strong>：所有组件使用动态导入进行代码分割</li><li><strong>环境集成</strong>：基本 URL 通过 Vite 环境变量配置</li></ul><p>此配置确保 URL 简洁无哈希片段，并通过组件分块优化初始加载性能。</p></div><h3 id="组件加载策略" tabindex="-1">组件加载策略 <a class="header-anchor" href="#组件加载策略" aria-label="Permalink to &quot;组件加载策略&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">所有路由组件都使用动态导入实现懒加载：</p><ul><li>减小首页文件大小</li><li>支持在路由级别进行代码分割</li><li>提高应用程序启动性能</li><li>支持根据用户导航进行渐进式加载</li></ul></div>',9))])}const _=i(c,[["render",n]]);export{b as __pageData,_ as default};
